{
	"info": {
		"_postman_id": "6693dc95-0d1a-4d86-94ab-6861e95681ff",
		"name": "Medica-Healthcare-Collection",
		"description": "**Medica Healthcare** is a cloud-based **healthcare practice management system** designed to streamline **patient care, clinic efficiency, and administrative tasks** while ensuring **HIPAA-compliant security**.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29468164"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Add ADMIN for Hospital by SUPER_ADMIN",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin@xyz.com\",\r\n    \"name\": \"swapnil\",\r\n    \"address\": \"pune\",\r\n    \"roles\": \"admin\",\r\n    \"contactNumber\": \"7057546782\",\r\n    \"dateOfBirth\": \"2000-01-26\",\r\n    \"type\": \"Regular\",\r\n    \"specalization\": \"Administration\",\r\n    \"careTaker\": true,\r\n    \"bookingStatus\": 0,\r\n    \"bookingCharge\": 0\r\n}\r\n// SWA7057@2000",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/superAdmin/addAdmin/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"superAdmin",
								"addAdmin",
								"1"
							]
						},
						"description": "#### **Authorization** \\- SUPER_ADMIN\n\nThis endpoint makes an HTTP POST request to add an admin with the given payload. The request body should include the following parameters:\n\n- `username` (text) - The email address of the admin.\n    \n- `password` (text) - The password for the admin account.\n    \n- `name` (text) - The name of the admin.\n    \n- `address` (text) - The address of the admin.\n    \n- `roles` (text) - The role assigned to the admin.\n    \n\n### Request Body\n\nThe request body should be in JSON format with the above-mentioned parameters.\n\n### Response\n\nUpon successful execution, the endpoint returns a status code of 200 with a content type of text/plain, and the message \"User has been saved\"."
					},
					"response": []
				},
				{
					"name": "Add user by admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"doctor@abc.pune.com\",\r\n    \"roles\": \"doctor\",\r\n    \"name\": \"swapnil\",\r\n    \"address\": \"nagpur\",\r\n    \"branch\": \"pune\",\r\n    \"salary\": 90000,\r\n    \"contactNumber\": \"7057546782\",\r\n    \"dateOfBirth\": \"2000-01-26\",\r\n    \"type\": \"Regular\",\r\n    \"specalization\": \"Ortho\",\r\n    \"careTaker\": false,\r\n    \"bookingStatus\": 0,\r\n    \"bookingCharge\": 0,\r\n    \"doctorFee\":900\r\n}\r\n// swa7075@2000",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/user/add",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"add"
							]
						},
						"description": "# Add User\n\n#### **Authorization** - ADMIN\n\nThis endpoint allows you to add a new user with the provided details.\n\n###### **Authorization** - ADMIN\n\n## Request Body\n\n- `username` (string): The email address of the user.\n    \n- `password` (string): The password for the user account.\n    \n- `name` (string): The name of the user.\n    \n- `address` (string): The address of the user.\n    \n- `branch` (string): The branch location of the user.\n    \n- `roles` (string): The role of the user.\n    \n- `doctorFee` (number): The fee charged by the doctor.\n    \n- `salary` (number): The salary of the user.\n    \n\n### Response\n\n- Status: 200\n    \n- Content-Type: text/plain\n    \n- Body: \"User has been saved\""
					},
					"response": []
				},
				{
					"name": "get user by id - admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/get/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"get",
								"7"
							]
						},
						"description": "### Get User By Id\n\n#### **Authorization** - ADMIN\n\nThis endpoint retrieves the details of a specific user based on the provided user ID.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:8080/user/get/{userId}`\n    \n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\n``` json\n{\n    \"id\": 0,\n    \"username\": \"\",\n    \"name\": \"\",\n    \"password\": \"\",\n    \"branch\": \"\",\n    \"roles\": \"\",\n    \"hospital\": {\n        \"id\": 0,\n        \"name\": \"\",\n        \"address\": \"\",\n        \"contactNumber\": \"\",\n        \"emailId\": \"\",\n        \"openingTime\": \"\",\n        \"closingTime\": \"\",\n        \"branch\": \"\",\n        \"workingDays\": \"\",\n        \"offDays\": \"\",\n        \"numberOfUsers\": \"\",\n        \"departments\": \"\",\n        \"createdUser\": {\n            \"id\": 0,\n            \"username\": \"\",\n            \"name\": \"\",\n            \"password\": \"\",\n            \"branch\": null,\n            \"roles\": \"\",\n            \"hospital\": null,\n            \"createdUser\": 0,\n            \"modifiedUser\": 0,\n            \"createdDate\": \"\",\n            \"modifiedDate\": \"\",\n            \"status\": 0\n        },\n        \"modifiedUser\": 0,\n        \"createdDate\": \"\",\n        \"modifiedDate\": \"\",\n        \"status\": 0\n    },\n    \"createdUser\": 0,\n    \"modifiedUser\": {\n        \"id\": 0,\n        \"username\": \"\",\n        \"name\": \"\",\n        \"password\": \"\",\n        \"branch\": \"\",\n        \"roles\": \"\",\n        \"hospital\": {\n            \"id\": 0,\n            \"name\": \"\",\n            \"address\": \"\",\n            \"contactNumber\": \"\",\n            \"emailId\": \"\",\n            \"openingTime\": \"\",\n            \"closingTime\": \"\",\n            \"branch\": \"\",\n            \"workingDays\": \"\",\n            \"offDays\": \"\",\n            \"numberOfUsers\": \"\",\n            \"departments\": \"\",\n            \"createdUser\": 0,\n            \"modifiedUser\": 0,\n            \"createdDate\": \"\",\n            \"modifiedDate\": \"\",\n            \"status\": 0\n        },\n        \"createdUser\": 0,\n        \"modifiedUser\": 0,\n        \"createdDate\": \"\",\n        \"modifiedDate\": \"\",\n        \"status\": 0\n    },\n    \"createdDate\": \"\",\n    \"modifiedDate\": \"\",\n    \"status\": 0\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "update user - self",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"doctor@abc.pune.com\",\r\n    \"password\":\"SWA7057@2000\",\r\n    \"name\":\"swap\",\r\n    \"address\":\"pune\",\r\n    \"roles\":\"DOCTOR\",\r\n    \"contactNumber\":\"7057546782\",\r\n    \"dateOfBirth\":\"2000-01-26\",\r\n    \"specalization\":\"Ortho\"\r\n\r\n//below details user can not edit. only admin have to access to edit\r\n    // \"branch\":\"pune\",\r\n    // \"doctorFee\":1200,\r\n    // \"salary\":230000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/user/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"update"
							]
						},
						"description": "### Update User -self\n\n#### **Authorization** - ALL USERS\n\nThis endpoint allows the client to update user information.\n\n#### Request Body\n\n- `username` (string) - The username of the user.\n    \n- `password` (string) - The password of the user.\n    \n- `name` (string) - The name of the user.\n    \n- `address` (string) - The address of the user.\n    \n- `roles` (string) - The roles of the user."
					},
					"response": []
				},
				{
					"name": "get all users from hospital-admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjFAZ21haWwuY29tIiwiaWF0IjoxNzQwNjUyMDM4fQ.l-KtkzYZ5uXX6ylOx_sj1vK4wjJXa3uGSQS-WdMOpOg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/getAll",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"getAll"
							]
						},
						"description": "# Get All User\n\n#### **Authorization** - ADMIN\n\nThe `http://localhost:8080/user/getAll` endpoint is a GET request that returns a JSON array of user objects. Each user object contains the following properties:\n\n- `id` (number): The unique identifier of the user.\n    \n- `username` (string): The username of the user.\n    \n- `name` (string): The name of the user.\n    \n- `password` (string): The password of the user.\n    \n- `branch` (string): The branch of the user.\n    \n- `roles` (string): The roles assigned to the user.\n    \n- `hospital` (object): An object representing the hospital details associated with the user. It contains various properties such as `id`, `name`, `address`, `contactNumber`, `emailId`, `openingTime`, `closingTime`, `branch`, `workingDays`, `offDays`, `numberOfUsers`, `departments`, `createdUser`, `modifiedUser`, `createdDate`, `modifiedDate`, and `status`.\n    \n\n**Request Body**  \nThis request does not require a request body.\n\n**Response**\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\n  \nThe response contains an array of user objects with their respective properties as described above."
					},
					"response": []
				},
				{
					"name": "get all active users by admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjFAZ21haWwuY29tIiwiaWF0IjoxNzQwNjUyMDM4fQ.l-KtkzYZ5uXX6ylOx_sj1vK4wjJXa3uGSQS-WdMOpOg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/getActive",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"getActive"
							]
						},
						"description": "# Get Active Users\n\n#### **Authorization** - ADMIN\n\nThis endpoint retrieves the active user details.\n\n## Request\n\n### HTTP Request Method\n\nGET\n\n### Endpoint\n\n[http://localhost:8080/user/getActive](http://localhost:8080/user/getActive)\n\n## Response\n\n### Body\n\nThe response will be a JSON array containing active user details. Each user object will have the following attributes:\n\n- `id` (number): The user's ID\n    \n- `username` (string): The user's username\n    \n- `name` (string): The user's name\n    \n- `password` (string): The user's password\n    \n- `branch` (string): The user's branch\n    \n- `roles` (string): The user's roles\n    \n- `hospital` (object): The user's associated hospital details including ID, name, address, contact number, email ID, opening time, closing time, branch, working days, off days, number of users, and departments\n    \n- `createdUser` (number): The ID of the user who created this user\n    \n- `modifiedUser` (number): The ID of the user who last modified this user\n    \n- `createdDate` (string): The date when the user was created\n    \n- `modifiedDate` (string): The date when the user was last modified\n    \n- `status` (number): The status of the user\n    \n\n### Status Code\n\n200 - OK"
					},
					"response": []
				},
				{
					"name": "delete user by admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/delete/35",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"delete",
								"35"
							]
						},
						"description": "### DELETE /user/delete/{userId}\n\n#### **Authorization** - ADMIN\n\nThis endpoint is used to deactivate a user account with the specified user ID.\n\n#### Request\n\nNo request body is required for this endpoint. The user ID is specified in the URL path.\n\n- `userId` (path parameter) - The ID of the user account to be deactivated.\n    \n\n#### Response\n\nThe response is of type `text/plain` and returns a message indicating the status of the account deactivation.\n\nExample response:\n\n``` json\n{\n  \"type\": \"string\",\n  \"description\": \"USER Account has been Deactivated.\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "reactive user by admin",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/reactive/35",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"reactive",
								"35"
							]
						},
						"description": "### Update User Account (Reactive)\n\n#### **Authorization** \\- ADMIN\n\nThis endpoint is used to update the user account with reactive behavior.\n\n#### Request Body\n\n- No request body is required for this endpoint.\n    \n\n#### Response\n\n- Status: 200 OK\n    \n- Content Type: text/plain\n    \n- User Account has been Activated."
					},
					"response": []
				},
				{
					"name": "get user by token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/getByToken",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"getByToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "password update  - admin",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"private.receptionist.mumbaii@gmail.com\",\r\n    \"password\":\"swa9999@2001\"\r\n}\r\n// swa9999@2001",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/user/updatePassword",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"updatePassword"
							]
						},
						"description": "## Update User Password\n\n#### **Authorization** \\- ADMIN\n\nThis endpoint allows the user to update their password.\n\n### Request Body\n\n- `username` (string): The email address of the user.\n    \n- `password` (string): The new password for the user account.\n    \n\n### Response\n\nThe response is in plain text format and indicates the success of the password update operation.\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"number\",\n      \"description\": \"The HTTP status code of the response.\"\n    },\n    \"Content-Type\": {\n      \"type\": \"string\",\n      \"description\": \"The type of content in the response.\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"A message indicating the result of the password update operation.\"\n    }\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "unblock user by admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"swapnilsudrik.s@gmail.com\",\r\n    \"password\": \"superadmin123\"\r\n}\r\n\r\n// {\r\n//     \"username\": \"admin@gmail.com\",\r\n//     \"password\": \"12345\"\r\n// }\r\n{\r\n    \"username\":\"r4@gmail.com\",\r\n    \"password\":\"1234\"\r\n}\r\n\r\n{\r\n    \"username\":\"d2@gmail.com\",\r\n    \"password\":\"1234\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/user/unlockUser/private.receptionist.mumbaiiii@gmail.com",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"unlockUser",
								"private.receptionist.mumbaiiii@gmail.com"
							]
						}
					},
					"response": []
				}
			],
			"description": "The **User** module manages user registration, authentication, and role-based access control within the system. Users can be **SUPER_ADMIN, ADMIN, DOCTOR, or RECEPTIONIST**."
		},
		{
			"name": "Staff",
			"item": [
				{
					"name": "get all staff - admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/staff/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"staff",
								"all"
							]
						},
						"description": "### Get All Staff\n\n#### **Authorization** - ADMIN\n\nThis endpoint retrieves the details of all staff members.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:8080/staff/all`\n    \n\n#### Response\n\n- Status: 200 OK\n    \n- Content-Type: application/json\n    \n\n##### Response Body\n\n``` json\n[\n    {\n        \"id\": 0,\n        \"email\": \"\",\n        \"name\": \"\",\n        \"address\": \"\",\n        \"branch\": \"\",\n        \"roles\": \"\",\n        \"doctorFee\": 0,\n        \"salary\": 0,\n        \"status\": 0,\n        \"hospital\": {\n            \"id\": 0,\n            \"name\": \"\",\n            \"address\": \"\",\n            \"contactNumber\": \"\",\n            \"emailId\": \"\",\n            \"openingTime\": \"\",\n            \"closingTime\": \"\",\n            \"branch\": \"\",\n            \"workingDays\": \"\",\n            \"offDays\": \"\",\n            \"numberOfUsers\": \"\",\n            \"departments\": \"\",\n            \"createdUser\": {\n                \"id\": 0,\n                \"username\": \"\",\n                \"name\": \"\",\n                \"password\": \"\",\n                \"branch\": null,\n                \"roles\": \"\",\n                \"hospital\": null,\n                \"createdUser\": 0,\n                \"modifiedUser\": 0,\n                \"createdDate\": \"\",\n                \"modifiedDate\": \"\",\n                \"status\": 0\n            },\n            \"modifiedUser\": 0,\n            \"createdDate\": \"\",\n            \"modifiedDate\": \"\",\n            \"status\": 0\n        },\n        \"createdUser\": 0,\n        \"modifiedUser\": 0,\n        \"createdDate\": \"\",\n        \"modifiedDate\": \"\"\n    }\n]\n\n ```"
					},
					"response": []
				},
				{
					"name": "get active staff - admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/staff/active",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"staff",
								"active"
							]
						},
						"description": "### Retrieve Active Staff\n\n#### Access - ADMIN\n\nThis endpoint makes an HTTP GET request to retrieve information about active staff members.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:8080/staff/active`\n    \n\n#### Response\n\nUpon a successful request, the server will respond with a status code of 200 and a JSON object containing an array of active staff members. Each staff member object includes the following fields:\n\n- `id` (number): The unique identifier of the staff member\n    \n- `email` (string): The email address of the staff member\n    \n- `name` (string): The name of the staff member\n    \n- `address` (string): The address of the staff member\n    \n- `branch` (string): The branch where the staff member is located\n    \n- `roles` (string): The role or roles of the staff member\n    \n- `doctorFee` (number): The fee charged by the staff member if they are a doctor\n    \n- `salary` (number): The salary of the staff member\n    \n- `status` (number): The status of the staff member\n    \n- `hospital` (object): An object containing information about the hospital where the staff member works, including its unique identifier, name, address, contact number, email, opening and closing times, working days, off days, number of users, departments, and details of the user who created and modified the hospital entry\n    \n- `createdUser` (number): The unique identifier of the user who created the staff member entry\n    \n- `modifiedUser` (number): The unique identifier of the user who last modified the staff member entry\n    \n- `createdDate` (string): The date when the staff member entry was created\n    \n- `modifiedDate` (string): The date when the staff member entry was last modified"
					},
					"response": []
				},
				{
					"name": "get staff by id - admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/staff/get/36",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"staff",
								"get",
								"36"
							]
						},
						"description": "# Get Staff By Id\n\n#### **Access** - ADMIN\n\nThis endpoint retrieves staff information based on the provided staff ID.\n\n### Request\n\n#### Request URL\n\n- Method: GET\n    \n- URL: `http://localhost:8080/staff/get/{staffId}`\n    \n\n### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\n#### Response Body\n\nThe response contains staff information including ID, email, name, address, branch, roles, doctor fee, salary, and status. It also includes details about the hospital associated with the staff, the user who created the staff record, the user who last modified the staff record, and timestamps for record creation and modification."
					},
					"response": []
				},
				{
					"name": "update staff - admin",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"doctor@abc.pune.com\",\r\n    \"address\": \"pune\",\r\n    \"name\": \"swapnil\",\r\n    \"branch\": \"PUNE\",\r\n    \"roles\": \"doctor\",\r\n    \"doctorFee\": 1200,\r\n    \"salary\": 100000,\r\n    \"contactNumber\": \"7057546782\",\r\n    \"dateOfBirth\": \"2001-09-09\",\r\n    \"type\": \"Regular\",\r\n    \"specalization\": \"Ortho\",\r\n    \"bookingCharge\":1234,\r\n    \"bookingStatus\":0,\r\n    \"careTaker\":false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/staff/update/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"staff",
								"update",
								"2"
							]
						},
						"description": "## Update Staff Account\n\n#### Access - ADMIN\n\nThis endpoint allows the client to update the details of a staff member.\n\n### Request\n\n- Method: PUT\n    \n- URL: `http://localhost:8080/staff/update/{staffId}`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- { \"branch\": \"mumbai\", \"address\": \"mumbai\", \"name\": \"sw\", \"roles\": \"doctor\", \"doctorFee\": 1200, \"salary\": 100000}\n    \n\n### Response\n\n- Status: 200\n    \n- Content-Type: text/plain\n    \n- Body: Staff Account update successfully"
					},
					"response": []
				},
				{
					"name": "reactive staff by id - admin",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/staff/reactive/36",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"staff",
								"reactive",
								"36"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete staff by id - admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/staff/delete/35",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"staff",
								"delete",
								"35"
							]
						}
					},
					"response": []
				}
			],
			"description": "The **Staff** module manages **hospital employees** such as **DOCTORS, NURSES, ADMIN, and RECEPTIONISTS**. and other staff member. It includes staff **registration, role assignment, salary management, and access control** within the hospital system."
		},
		{
			"name": "Request",
			"item": [
				{
					"name": "send request from doctor",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"branch\": \"Mumbai\",\r\n    \"message\":\"accept request\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/request/send/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"request",
								"send",
								"2"
							]
						},
						"description": "## Send Request\n\nThis endpoint is used to send a request with a payload to the server.\n\n### Request Body\n\n- `branch`: (string) The branch related to the request.\n    \n- `message`: (string) The message for the request.\n    \n\n### Response\n\nThe response for this request will follow the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"timestamp\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "view pending requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/request/pending",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"request",
								"pending"
							]
						},
						"description": "### Get Pending Request\n\nThis endpoint retrieves pending requests.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response for this request is a JSON schema, representing the structure of the response data."
					},
					"response": []
				},
				{
					"name": "view accepted requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/request/accepted",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"request",
								"accepted"
							]
						},
						"description": "### Request Description\n\nThis endpoint makes an HTTP GET request to retrieve the accepted request. The request does not include a request body.\n\n### Response\n\nThe response for this request is a JSON schema, which includes the accepted request details. The response schema should be documented accordingly."
					},
					"response": []
				},
				{
					"name": "view rejected requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/request/rejected",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"request",
								"rejected"
							]
						},
						"description": "### Retrieve Rejected Request Details\n\nThis endpoint makes an HTTP GET request to retrieve the details of a rejected request.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response will include the details of the rejected request, including the request ID, timestamp, reason for rejection, and any additional notes."
					},
					"response": []
				},
				{
					"name": "accept request - doctor, admin",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/request/accept/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"request",
								"accept",
								"2"
							]
						},
						"description": "### Request Acceptance\n\nThis endpoint sends an HTTP PUT request to update the acceptance status for a specific request.\n\n#### Request Body\n\n- No request body parameters required.\n    \n\n#### Response\n\n- **success** (`string`): Indicates the success of the acceptance update.\n    \n\nExample Response:\n\n``` json\n{\n    \"success\": \"\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "reject request - doctor,admin",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://localhost:8080/request/reject/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"request",
								"reject",
								"1"
							]
						},
						"description": "### Request Rejection\n\nThis endpoint is used to reject a specific request.\n\n#### Request Body\n\nThe request should include form-data with the necessary parameters.\n\n- `parameter1`: (text) Description of parameter1.\n    \n- `parameter2`: (file) Description of parameter2.\n    \n\n#### Response\n\nUpon making the request, the server will respond with a status code of 400 and the content type will be in JSON format. In case of an error, the response will include a JSON object with an `error` key."
					},
					"response": []
				}
			]
		},
		{
			"name": "Subscription",
			"item": [
				{
					"name": "Subscribe Mail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/subscription/subscribe?email=",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"subscription",
								"subscribe"
							],
							"query": [
								{
									"key": "email",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unsubscribe Mail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/subscription/unsubscribe?email=",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"subscription",
								"unsubscribe"
							],
							"query": [
								{
									"key": "email",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Invoice",
			"item": [
				{
					"name": "generate Invoice by appointmentId",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "paymentMode",
									"value": "INSURANCE",
									"type": "text"
								},
								{
									"key": "policyNumber",
									"value": "100",
									"type": "text"
								},
								{
									"key": "policyCompanyName",
									"value": "THIS IS COMPANY",
									"type": "text"
								},
								{
									"key": "policyStatus",
									"value": "CLAIMED",
									"type": "text"
								},
								{
									"key": "policyAmount",
									"value": "200",
									"type": "text",
									"disabled": true
								},
								{
									"key": "quickCareCharge",
									"value": "470",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/invoice/generateInvoice/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"generateInvoice",
								"5"
							]
						},
						"description": "# **Generate Invoice**\n\nThis API endpoint is used to generate an invoice for a specific entity. The HTTP POST request should be made to [http://localhost:8080/invoice/generateInvoice/5](http://localhost:8080/invoice/generateInvoice/5), where \"5\" is the identifier for the entity for which the invoice is being generated.\n\n### Request Body\n\nThe request should include a form-data body type with the necessary parameters to generate the invoice. Please refer to the API documentation for the required parameters and their descriptions.\n\n### Response\n\nThe response will contain the details of the generated invoice, including the invoice number, date, items, total amount, and any other relevant information."
					},
					"response": []
				},
				{
					"name": "send invoice by using invoice id",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/invoice/sendInvoiceById/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"sendInvoiceById",
								"1"
							],
							"query": [
								{
									"key": "isReminder",
									"value": "true",
									"disabled": true
								}
							]
						},
						"description": "# Send invoice by Email\n\n> **Description:**  \nSends a hospital bill as a PDF attachment via email to the patient's registered email address. If `isReminder=true`, the email will be sent as a payment reminder instead of a standard bill. \n  \n\n**Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n## **Request Parameters:**\n\n1. **Path Parameters :**\n    \n    | Parameter | Type | Required | Description |\n    | --- | --- | --- | --- |\n    | `billingId` | `long` | Yes | The unique ID of the bill to be emailed. |\n    | `isReminder` | `boolean` | No (default: `false`) | If `true`, the email will be a due payment reminder. |\n    \n\n---\n\n## **Response:**\n\n### **Success Response (200 OK)**\n\n**Content-Type:** `application/pdf`  \n**Headers:**\n\n- `Content-Disposition: inline; filename=bill.pdf`\n    \n- `Content-Type: application/pdf`\n    \n\n**Response Body:**  \nReturns the generated PDF bill as a response body.\n\n---"
					},
					"response": []
				},
				{
					"name": "update invoice by bill id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "paidAmount",
									"value": "50",
									"type": "text"
								},
								{
									"key": "dueDate",
									"value": "2025-05-09",
									"type": "text"
								},
								{
									"key": "paymentMode",
									"value": "CREDIT_CARD",
									"type": "text"
								},
								{
									"key": "paymentMode",
									"value": "INSURANCE",
									"type": "text"
								},
								{
									"key": "policyNumber",
									"value": "100",
									"type": "text"
								},
								{
									"key": "policyCompanyName",
									"value": "THIS IS COMPANY",
									"type": "text"
								},
								{
									"key": "policyStatus",
									"value": "CLAIMED",
									"type": "text"
								},
								{
									"key": "policyAmount",
									"value": "200",
									"type": "text"
								},
								{
									"key": "quickCareCharge",
									"value": "470",
									"type": "text"
								},
								{
									"key": "",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/invoice/updateInvoice/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"updateInvoice",
								"1"
							]
						},
						"description": "### Update Invoice\n\n> **Description:**  \nThis API endpoint allows the `RECEPTIONIST` to update an existing bill using the billing ID. The update includes modifying the payment details such as the paid amount, payment mode, due date, and bill status. The system ensures that the total paid amount does not exceed the total bill amount and mandates a due date if the bill is not fully paid. \n  \n\n#### **Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n#### Request Parameters\n\n1. **Path Parameters :**\n    \n    | **Parameter** | **Type** | **Required** |\n    | --- | --- | --- |\n    | `billingId` | Long | Yes |\n    \n\n1. **Body Parameters :**\n    \n    | **Parameter** | **Type** | **Required** |\n    | --- | --- | --- |\n    | `paidAmount` | BigDecimal | Yes |\n    | `paymentMode` | Enum (`String`) | Yes |\n    | `dueDate` | Date (`YYYY-MM-DD`) | No |\n    \n\n#### Response\n\n- Status: 201\n    \n- Content-Type: application/json\n    \n\nThe response will contain a JSON object with a `message` key.\n\nExample:\n\n``` json\n{\n    \"message\": \"\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "get invoice by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "status",
									"value": "",
									"type": "text"
								},
								{
									"key": "status",
									"value": "PARTIALLY_PAID",
									"type": "text",
									"disabled": true
								},
								{
									"key": "status",
									"value": "COMPLETE",
									"type": "text",
									"disabled": true
								},
								{
									"key": "status",
									"value": "PARTIALLY_PAID,UNPAID ",
									"type": "text",
									"disabled": true
								},
								{
									"key": "status",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/invoice/getInvoiceByStatus",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getInvoiceByStatus"
							]
						},
						"description": "### Retrieve Invoices by Status\n\n> **Description:**  \nThis API endpoint allows a receptionist to retrieve a list of invoices filtered by their status. If no status is provided, it defaults to fetching invoices with `COMPLETE`, `PARTIALLY_PAID`, and `UNPAID` statuses. \n  \n\n#### **Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n#### **Request Parameters :**\n\n1. **ParameterTypeRequiredDescription**`status`List of `BillingStatus`NoThe status of the invoices to filter. Allowed values: `COMPLETE`, `PARTIALLY_PAID`, `UNPAID`. Defaults to all three if not provided.\n    \n\nThe request does not contain any parameters or a request body.\n\n#### Response\n\nUpon a successful execution, the API returns a JSON response with the array of invoice objects. Each invoice object has the following properties:\n\n- `id` (number): The unique identifier of the invoice.\n    \n- `totalAmount` (number): The total amount of the invoice.\n    \n- `paidAmount` (number): The amount already paid for the invoice.\n    \n- `balanceAmount` (number): The remaining balance amount for the invoice.\n    \n- `doctorFee` (number): The fee charged by the doctor for the invoice.\n    \n- `paymentMode` (string): The mode of payment for the invoice.\n    \n- `createdUser` (object): The user who created the invoice with their details.\n    \n- `modifiedUser` (object): The user who last modified the invoice with their details.\n    \n- `dueDate` (string): The due date for the invoice.\n    \n- `hospitalizationInfo` (object): Information related to hospitalization, if applicable.\n    \n\n#### Example\n\n``` json\n[\n  {\n    \"id\": 0,\n    \"totalAmount\": 0,\n    \"paidAmount\": 0,\n    \"balanceAmount\": 0,\n    \"doctorFee\": 0,\n    \"paymentMode\": \"\",\n    \"createdUser\": {\n      \"id\": 0,\n      \"username\": \"\",\n      \"name\": \"\",\n      \"password\": \"\",\n      \"branch\": \"\",\n      \"roles\": \"\",\n      \"hospital\": {\n        \"id\": 0,\n        \"name\": \"\",\n        \"address\": \"\",\n        \"contactNumber\": \"\",\n        \"emailId\": \"\",\n        \"openingTime\": \"\",\n        \"closingTime\": \"\",\n        \"branch\": \"\",\n        \"workingDays\": \"\",\n        \"offDays\": \"\",\n        \"numberOfUsers\": \"\",\n        \"departments\": \"\",\n        \"createdUser\": {\n          \"id\": 0,\n          \"username\": \"\",\n          \"name\": \"\",\n          \"password\": \"\",\n          \"branch\": null,\n          \"roles\": \"\",\n          \"hospital\": null,\n          \"createdUser\": 0,\n          \"modifiedUser\": 0,\n          \"createdDate\": \"\",\n          \"modifiedDate\": \"\",\n          \"status\": 0\n        },\n        \"modifiedUser\": 0,\n        \"createdDate\": \"\",\n        \"modifiedDate\": \"\",\n        \"status\": 0\n      },\n      \"createdUser\": {\n        \"id\": 0,\n        \"username\": \"\",\n        \"name\": \"\",\n        \"password\": \"\",\n        \"branch\": \"\",\n        \"roles\": \"\",\n        \"hospital\": {\n          \"id\": 0,\n          \"name\": \"\",\n          \"address\": \"\",\n          \"contactNumber\": \"\",\n          \"emailId\": \"\",\n          \"openingTime\": \"\",\n          \"closingTime\": \"\",\n          \"branch\": \"\",\n          \"workingDays\": \"\",\n          \"offDays\": \"\",\n          \"numberOfUsers\": \"\",\n          \"departments\": \"\",\n          \"createdUser\": 0,\n          \"modifiedUser\": 0,\n          \"createdDate\": \"\",\n          \"modifiedDate\": \"\",\n          \"status\": 0\n        },\n        \"createdUser\": 0,\n        \"modifiedUser\": 0,\n        \"createdDate\": \"\",\n        \"modifiedDate\": \"\",\n        \"status\": 0\n      },\n      \"modifiedUser\": 0,\n      \"createdDate\": \"\",\n      \"modifiedDate\": \"\",\n      \"status\": 0\n    },\n    \"modifiedUser\": 0,\n    \"createdDate\": \"\",\n    \"modifiedDate\": \"\",\n    \"status\": \"\",\n    \"dueDate\": \"\",\n    \"hospitalizationInfo\": null\n  }\n]\n\n ```\n\n> **Description:**  \nThis API endpoint allows a receptionist to retrieve a list of bills filtered by their status. If no status is provided, it defaults to fetching bills with `COMPLETE`, `PARTIALLY_PAID`, and `UNPAID` statuses. \n  \n\n#### **Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n#### **Request Parameters :**\n\n1. **Path Parameters :**\n    \n    | **Parameter** | **Type** | **Required** | **Description** |\n    | --- | --- | --- | --- |\n    | `status` | List of `BillingStatus` | No | The status of the bills to filter. Allowed values: `COMPLETE`, `PARTIALLY_PAID`, `UNPAID`. Defaults to all three if not provided. |\n    \n\nThe request does not contain any parameters or a request body.\n\n#### Response\n\nUpon a successful execution, the API returns a JSON response with the array of bill objects. Each bill object has the following properties:\n\n- `id` (number): The unique identifier of the bill.\n    \n- `totalAmount` (number): The total amount of the bill.\n    \n- `paidAmount` (number): The amount already paid for the bill.\n    \n- `balanceAmount` (number): The remaining balance amount for the bill.\n    \n- `doctorFee` (number): The fee charged by the doctor for the bill.\n    \n- `paymentMode` (string): The mode of payment for the bill.\n    \n- `createdUser` (object): The user who created the bill with their details.\n    \n- `modifiedUser` (object): The user who last modified the bill with their details.\n    \n- `dueDate` (string): The due date for the bill.\n    \n- `hospitalizationInfo` (object): Information related to hospitalization, if applicable.\n    \n\n#### Example\n\n``` json\n[\n  {\n    \"id\": 0,\n    \"totalAmount\": 0,\n    \"paidAmount\": 0,\n    \"balanceAmount\": 0,\n    \"doctorFee\": 0,\n    \"paymentMode\": \"\",\n    \"createdUser\": {\n      \"id\": 0,\n      \"username\": \"\",\n      \"name\": \"\",\n      \"password\": \"\",\n      \"branch\": \"\",\n      \"roles\": \"\",\n      \"hospital\": {\n        \"id\": 0,\n        \"name\": \"\",\n        \"address\": \"\",\n        \"contactNumber\": \"\",\n        \"emailId\": \"\",\n        \"openingTime\": \"\",\n        \"closingTime\": \"\",\n        \"branch\": \"\",\n        \"workingDays\": \"\",\n        \"offDays\": \"\",\n        \"numberOfUsers\": \"\",\n        \"departments\": \"\",\n        \"createdUser\": {\n          \"id\": 0,\n          \"username\": \"\",\n          \"name\": \"\",\n          \"password\": \"\",\n          \"branch\": null,\n          \"roles\": \"\",\n          \"hospital\": null,\n          \"createdUser\": 0,\n          \"modifiedUser\": 0,\n          \"createdDate\": \"\",\n          \"modifiedDate\": \"\",\n          \"status\": 0\n        },\n        \"modifiedUser\": 0,\n        \"createdDate\": \"\",\n        \"modifiedDate\": \"\",\n        \"status\": 0\n      },\n      \"createdUser\": {\n        \"id\": 0,\n        \"username\": \"\",\n        \"name\": \"\",\n        \"password\": \"\",\n        \"branch\": \"\",\n        \"roles\": \"\",\n        \"hospital\": {\n          \"id\": 0,\n          \"name\": \"\",\n          \"address\": \"\",\n          \"contactNumber\": \"\",\n          \"emailId\": \"\",\n          \"openingTime\": \"\",\n          \"closingTime\": \"\",\n          \"branch\": \"\",\n          \"workingDays\": \"\",\n          \"offDays\": \"\",\n          \"numberOfUsers\": \"\",\n          \"departments\": \"\",\n          \"createdUser\": 0,\n          \"modifiedUser\": 0,\n          \"createdDate\": \"\",\n          \"modifiedDate\": \"\",\n          \"status\": 0\n        },\n        \"createdUser\": 0,\n        \"modifiedUser\": 0,\n        \"createdDate\": \"\",\n        \"modifiedDate\": \"\",\n        \"status\": 0\n      },\n      \"modifiedUser\": 0,\n      \"createdDate\": \"\",\n      \"modifiedDate\": \"\",\n      \"status\": 0\n    },\n    \"modifiedUser\": 0,\n    \"createdDate\": \"\",\n    \"modifiedDate\": \"\",\n    \"status\": \"\",\n    \"dueDate\": \"\",\n    \"hospitalizationInfo\": null\n  }\n]\n\n ```"
					},
					"response": []
				},
				{
					"name": "filter by balance",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/invoice/getInvoiceByBalanceRange?minBalance=",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getInvoiceByBalanceRange"
							],
							"query": [
								{
									"key": "minBalance",
									"value": ""
								},
								{
									"key": "maxBalance",
									"value": "1000",
									"disabled": true
								}
							]
						},
						"description": "### Filter By Balance\n\n> **Description:**  \nRetrieves a list of bills within a specified balance range. The user can filter bills based on the minimum and maximum balance. \n  \n\n**Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n## **Request Parameters:**\n\n| Parameter | Type | Required | Description |\n| --- | --- | --- | --- |\n| `minBalance` | `BigDecimal` | No | Minimum balance amount (default: `0`). |\n| `maxBalance` | `BigDecimal` | No | Maximum balance amount (default: `Double.MAX_VALUE`). |\n\n#### Response\n\nThe response will be a JSON array containing bill objects with the following properties:\n\n- `id` (number) - The ID of the bill.\n    \n- `totalAmount` (number) - The total amount of the bill.\n    \n- `paidAmount` (number) - The amount already paid for the bill.\n    \n- `balanceAmount` (number) - The remaining balance amount for the bill.\n    \n- `doctorFee` (number) - The fee charged by the doctor.\n    \n- `paymentMode` (string) - The mode of payment for the bill.\n    \n- `createdUser` (object) - Information about the user who created the bill.\n    \n- `modifiedUser` (number) - The ID of the user who last modified the bill.\n    \n- `createdDate` (string) - The date when the bill was created.\n    \n- `modifiedDate` (string) - The date when the bill was last modified.\n    \n- `status` (string) - The status of the bill.\n    \n- `dueDate` (string) - The due date for the bill.\n    \n- `hospitalizationInfo` (object) - Information about hospitalization, if applicable.\n    \n\n#### Example\n\n``` json\n[\n    {\n        \"id\": 0,\n        \"totalAmount\": 0,\n        \"paidAmount\": 0,\n        \"balanceAmount\": 0,\n        \"doctorFee\": 0,\n        \"paymentMode\": \"\",\n        \"createdUser\": {\n            \"id\": 0,\n            \"username\": \"\",\n            \"name\": \"\",\n            \"password\": \"\",\n            \"branch\": \"\",\n            \"roles\": \"\",\n            \"hospital\": {\n                \"id\": 0,\n                \"name\": \"\",\n                \"address\": \"\",\n                \"contactNumber\": \"\",\n                \"emailId\": \"\",\n                \"openingTime\": \"\",\n                \"closingTime\": \"\",\n                \"branch\": \"\",\n                \"workingDays\": \"\",\n                \"offDays\": \"\",\n                \"numberOfUsers\": \"\",\n                \"departments\": \"\",\n                \"createdUser\": 0,\n                \"modifiedUser\": 0,\n                \"createdDate\": \"\",\n                \"modifiedDate\": \"\",\n                \"status\": 0\n            },\n            \"createdUser\": {\n                \"id\": 0,\n                \"username\": \"\",\n                \"name\": \"\",\n                \"password\": \"\",\n                \"branch\": \"\",\n                \"roles\": \"\",\n                \"hospital\": {\n                    \"id\": 0,\n                    \"name\": \"\",\n                    \"address\": \"\",\n                    \"contactNumber\": \"\",\n                    \"emailId\": \"\",\n                    \"openingTime\": \"\",\n                    \"closingTime\": \"\",\n                    \"branch\": \"\",\n                    \"workingDays\": \"\",\n                    \"offDays\": \"\",\n                    \"numberOfUsers\": \"\",\n                    \"departments\": \"\",\n                    \"createdUser\": 0,\n                    \"modifiedUser\": 0,\n                    \"createdDate\": \"\",\n                    \"modifiedDate\": \"\",\n                    \"status\": 0\n                },\n                \"createdUser\": 0,\n                \"modifiedUser\": 0,\n                \"createdDate\": \"\",\n                \"modifiedDate\": \"\",\n                \"status\": 0\n            },\n            \"modifiedUser\": 0,\n            \"createdDate\": \"\",\n            \"modifiedDate\": \"\",\n            \"status\": \"\"\n        },\n        \"modifiedUser\": 0,\n        \"createdDate\": \"\",\n        \"modifiedDate\": \"\",\n        \"status\": \"\",\n        \"dueDate\": \"\",\n        \"hospitalizationInfo\": null\n    }\n]\n\n ```"
					},
					"response": []
				},
				{
					"name": "get invoice by id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/invoice/getInvoiceById/12",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getInvoiceById",
								"12"
							]
						},
						"description": "# Get invoice Details\n\n> **Description:**  \nRetrieves a specific bill using its unique ID. Only receptionists can access this API to view billing details. \n  \n\n#### **Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n### **Request Parameters:**\n\n1. **Path Parameters :**\n    \n    | Parameter | Type | Required | Description |\n    | --- | --- | --- | --- |\n    | `id` | `long` | Yes | The unique ID of the bill to retrieve. |\n    \n\n## Response\n\n- `id`: The ID of the bill.\n    \n- `totalAmount`: The total amount of the bill.\n    \n- `paidAmount`: The amount already paid for the bill.\n    \n- `balanceAmount`: The remaining balance amount for the bill.\n    \n- `doctorFee`: The fee charged by the doctor for the bill.\n    \n- `paymentMode`: The mode of payment for the bill.\n    \n- `createdUser`: The user who created the bill, including their ID, username, name, and other details.\n    \n- `modifiedUser`: The user who last modified the bill, including their ID, username, name, and other details.\n    \n- `dueDate`: The due date for the bill.\n    \n- `hospitalizationInfo`: Information related to hospitalization, if applicable.\n    \n\n### Response Format\n\n`application/json`\n\n### Status Codes\n\n- `200 OK`: The request was successful, and the bill details are returned.\n    \n- `404 Not Found`: If the bill with the provided ID is not found."
					},
					"response": []
				},
				{
					"name": "get all invoice",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/invoice/getAllInvoice",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getAllInvoice"
							]
						},
						"description": "### Retrieve All invoice\n\n> **Description:**  \nThis API endpoint allows a `RECEPTIONIST` to retrieve a list of all bills available in the DB. \n  \n\n#### **Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n#### Response\n\nThe response is a JSON array containing the details of all the bills. Below is a JSON schema representing the structure of the response:\n\n``` json\n[\n  {\n    \"id\": \"number\",\n    \"totalAmount\": \"number\",\n    \"paidAmount\": \"number\",\n    \"balanceAmount\": \"number\",\n    \"doctorFee\": \"number\",\n    \"paymentMode\": \"string\",\n    \"createdUser\": {\n      \"id\": \"number\",\n      \"username\": \"string\",\n      \"name\": \"string\",\n      \"password\": \"string\",\n      \"branch\": \"string\",\n      \"roles\": \"string\",\n      \"hospital\": {\n        \"id\": \"number\",\n        \"name\": \"string\",\n        \"address\": \"string\",\n        \"contactNumber\": \"string\",\n        \"emailId\": \"string\",\n        \"openingTime\": \"string\",\n        \"closingTime\": \"string\",\n        \"branch\": \"string\",\n        \"workingDays\": \"string\",\n        \"offDays\": \"string\",\n        \"numberOfUsers\": \"string\",\n        \"departments\": \"string\",\n        \"createdUser\": {\n          \"id\": \"number\",\n          \"username\": \"string\",\n          \"name\": \"string\",\n          \"password\": \"string\",\n          \"branch\": \"string\",\n          \"roles\": \"string\",\n          \"hospital\": \"object\",\n          \"createdUser\": \"number\",\n          \"modifiedUser\": \"number\",\n          \"createdDate\": \"string\",\n          \"modifiedDate\": \"string\",\n          \"status\": \"number\"\n        },\n        \"modifiedUser\": \"number\",\n        \"createdDate\": \"string\",\n        \"modifiedDate\": \"string\",\n        \"status\": \"number\"\n      },\n      \"createdUser\": {\n        \"id\": \"number\",\n        \"username\": \"string\",\n        \"name\": \"string\",\n        \"password\": \"string\",\n        \"branch\": \"string\",\n        \"roles\": \"string\",\n        \"hospital\": \"object\",\n        \"createdUser\": \"number\",\n        \"modifiedUser\": \"number\",\n        \"createdDate\": \"string\",\n        \"modifiedDate\": \"string\",\n        \"status\": \"number\"\n      },\n      \"modifiedUser\": \"number\",\n      \"createdDate\": \"string\",\n      \"modifiedDate\": \"string\",\n      \"status\": \"string\",\n      \"dueDate\": \"string\",\n      \"hospitalizationInfo\": \"null\"\n    }\n  }\n]\n\n ```"
					},
					"response": []
				},
				{
					"name": "get invoice by appointment id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/invoice/getInvoiceByAppointmentId/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getInvoiceByAppointmentId",
								"1"
							]
						},
						"description": "### Retrive invoice By Appointment Id\n\n> **Description:**  \nThis API retrieves the billing details for a specific appointment using the provided `appointmentId`. \n  \n\n#### **Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n#### **Request Parameter :**\n\n1. **Path Parameter :**\n    \n    | **Parameter** | **Type** | **Required** | **Description** |\n    | --- | --- | --- | --- |\n    | `appointmentId` | `long` | Yes | The unique identifier of the appointment for which the bill is being fetched. |\n    \n\n#### Response\n\nThe response returned is a JSON object with the following schema:\n\n- id (number): The unique identifier of the bill.\n    \n- totalAmount (number): The total amount of the bill.\n    \n- paidAmount (number): The amount that has been paid.\n    \n- balanceAmount (number): The remaining balance amount.\n    \n- doctorFee (number): The fee charged by the doctor.\n    \n- paymentMode (string): The mode of payment.\n    \n- createdUser (object): Details of the user who created the bill.\n    \n    - id (number): The unique identifier of the user.\n        \n    - username (string): The username of the user.\n        \n    - name (string): The name of the user.\n        \n    - password (string): The password of the user.\n        \n    - branch (string): The branch of the user.\n        \n    - roles (string): The roles assigned to the user.\n        \n    - hospital (object): Details of the hospital associated with the user.\n        \n        - id (number): The unique identifier of the hospital.\n            \n        - name (string): The name of the hospital.\n            \n        - address (string): The address of the hospital.\n            \n        - contactNumber (string): The contact number of the hospital.\n            \n        - emailId (string): The email address of the hospital.\n            \n        - openingTime (string): The opening time of the hospital.\n            \n        - closingTime (string): The closing time of the hospital.\n            \n        - branch (string): The branch of the hospital.\n            \n        - workingDays (string): The working days of the hospital.\n            \n        - offDays (string): The off days of the hospital.\n            \n        - numberOfUsers (string): The number of users associated with the hospital.\n            \n        - departments (string): The departments available in the hospital.\n            \n        - createdUser (object): Details of the user who created the hospital entry.\n            \n            - id (number): The unique identifier of the user who created the hospital entry.\n                \n            - username (string): The username of the user who created the hospital entry.\n                \n            - name (string): The name of the user who created the hospital entry.\n                \n            - password (string): The password of the user who created the hospital entry.\n                \n            - branch (string): The branch of the user who created the hospital entry.\n                \n            - roles (string): The roles assigned to the user who created the hospital entry.\n                \n            - hospital (null): The hospital associated with the user who created the hospital entry.\n                \n            - createdUser (number): The unique identifier of the user who created the hospital entry.\n                \n            - modifiedUser (number): The unique identifier of the user who last modified the hospital entry.\n                \n            - createdDate (string): The date when the hospital entry was created.\n                \n            - modifiedDate (string): The date when the hospital entry was last modified.\n                \n            - status (number): The status of the hospital entry.\n                \n        - modifiedUser (number): The unique identifier of the user who last modified the hospital entry.\n            \n        - createdDate (string): The date when the hospital entry was created.\n            \n        - modifiedDate (string): The date when the hospital entry was last modified.\n            \n        - status (number): The status of the hospital entry.\n            \n    - createdUser (object): Details of the user who created the bill entry.\n        \n        - (properties similar to the createdUser object described above)\n            \n    - modifiedUser (number): The unique identifier of the user who last modified the bill entry.\n        \n    - createdDate (string): The date when the bill entry was created.\n        \n    - modifiedDate (string): The date when the bill entry was last modified."
					},
					"response": []
				},
				{
					"name": "get invoice by patient id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/invoice/getByPatient/[3]",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getByPatient",
								"[3]"
							]
						},
						"description": "### Get invoice By Patient\n\n> **Description:**  \nFetches the billing details for a specific patient using the patient ID. Only `ADMIN` users are authorized to access this API. \n  \n\n#### **Access Control:**\n\n- **Role Required:** `ADMIN`\n    \n\n---\n\n### **Request Parameters:**\n\n1. **Path Parameters :**\n    \n\n| Parameter | Type | Required | Description |\n| --- | --- | --- | --- |\n| `id` | `long` | Yes | The unique ID of the patient |\n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\n##### Response Body\n\n``` json\n{\n    \"id\": 0,\n    \"totalAmount\": 0,\n    \"paidAmount\": 0,\n    \"balanceAmount\": 0,\n    \"doctorFee\": 0,\n    \"paymentMode\": \"\",\n    \"createdUser\": {\n        \"id\": 0,\n        \"username\": \"\",\n        \"name\": \"\",\n        \"password\": \"\",\n        \"branch\": \"\",\n        \"roles\": \"\",\n        \"hospital\": {\n            \"id\": 0,\n            \"name\": \"\",\n            \"address\": \"\",\n            \"contactNumber\": \"\",\n            \"emailId\": \"\",\n            \"openingTime\": \"\",\n            \"closingTime\": \"\",\n            \"branch\": \"\",\n            \"workingDays\": \"\",\n            \"offDays\": \"\",\n            \"numberOfUsers\": \"\",\n            \"departments\": \"\",\n            \"createdUser\": 0,\n            \"modifiedUser\": 0,\n            \"createdDate\": \"\",\n            \"modifiedDate\": \"\",\n            \"status\": 0\n        },\n        \"modifiedUser\": 0,\n        \"createdDate\": \"\",\n        \"modifiedDate\": \"\",\n        \"status\": \"\"\n    },\n    \"modifiedUser\": 0,\n    \"createdDate\": \"\",\n    \"modifiedDate\": \"\",\n    \"status\": \"\",\n    \"dueDate\": \"\",\n    \"hospitalizationInfo\": null\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "get invoice by patient name",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "name",
								"value": "manoj",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:8080/invoice/getInvoiceByPatientName?name=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZab",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getInvoiceByPatientName"
							],
							"query": [
								{
									"key": "name",
									"value": "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZab"
								}
							]
						},
						"description": "### Retrieve invoice by Patient Name\n\n> **Description:**  \nThis endpoint retrieves the bill details for a specific patient based on their name. \n  \n\n#### **Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n#### Request Parameters :\n\n1. **Path Parameter :**\n    \n    | **Parameter** | **Type** | **Required** | **Description** |\n    | --- | --- | --- | --- |\n    | `name` | `String` | Yes | The full or partial name of the patient to search for billing records. |\n    \n\n#### Response\n\nUpon a successful request, the server responds with a status code of 200 and a JSON array containing the bill details for the specified patient. The response includes the following attributes:\n\n- `id`: The unique identifier for the bill.\n    \n- `totalAmount`: The total amount of the bill.\n    \n- `paidAmount`: The amount already paid.\n    \n- `balanceAmount`: The remaining balance amount.\n    \n- `doctorFee`: The fee charged by the doctor.\n    \n- `paymentMode`: The mode of payment.\n    \n- `createdUser`: Details of the user who created the bill.\n    \n- `modifiedUser`: Details of the user who modified the bill.\n    \n- `dueDate`: The due date for the bill.\n    \n- `hospitalizationInfo`: Information related to hospitalization, if applicable.\n    \n\nThe response is in the JSON format with the mentioned attributes."
					},
					"response": []
				},
				{
					"name": "get invoice by month and year",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/invoice/getInvoiceByMonthAndYear?year=2025&month=5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getInvoiceByMonthAndYear"
							],
							"query": [
								{
									"key": "year",
									"value": "2025"
								},
								{
									"key": "month",
									"value": "5"
								}
							]
						},
						"description": "### Get invoice by Month and Year\n\n> **Description:**  \nThis API retrieves all billing records for a specific month and/or year. At least one of `month` or `year` must be provided. Only a receptionist can access this information. \n  \n\n#### **Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n#### Request Parameters :\n\n| **Parameter** | **Type** | **Required** | **Description** |\n| --- | --- | --- | --- |\n| `month` | `int` | No | The month (1-12) for which bills should be retrieved. |\n| `year` | `int` | No | The year (from 2020 to the current year) for which bills should be retrieved. |\n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n- The response will contain an array of bill objects, each including the following fields:\n    \n    - id (number): The unique identifier for the bill.\n        \n    - totalAmount (number): The total amount of the bill.\n        \n    - paidAmount (number): The amount already paid.\n        \n    - balanceAmount (number): The remaining balance amount.\n        \n    - doctorFee (number): The fee of the doctor.\n        \n    - paymentMode (string): The mode of payment.\n        \n    - createdUser (object): Details of the user who created the bill.\n        \n    - modifiedUser (object): Details of the user who modified the bill.\n        \n    - dueDate (string): The due date of the bill.\n        \n    - hospitalizationInfo (object): Information related to hospitalization, if applicable."
					},
					"response": []
				},
				{
					"name": "get invoice by date or date range",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/invoice/getInvoiceByDateRange?startDate=two thousand twenty five-may-ten",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getInvoiceByDateRange"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2025-09-29",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2025-05-01",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "two thousand twenty five-may-ten"
								},
								{
									"key": "endDate",
									"value": "2099-01-01",
									"disabled": true
								}
							]
						},
						"description": "### Get invoice by Date Range\n\n> **Description:**  \nRetrieves all billing records within a specified date range. If no start date is provided, it defaults to the earliest billing date. If no end date is provided, it defaults to the current date. \n  \n\n#### **Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n### **Request Parameters:**\n\n| **Parameter** | **Type** | **Required** | **Description** |\n| --- | --- | --- | --- |\n| `startDate` | `date (yyyy-MM-dd)` | No | The starting date for the search range. Defaults to the earliest billing date if not provided. |\n| `endDate` | `date (yyyy-MM-dd)` | No | The ending date for the search range. Defaults to the current date if not provided. |\n\n### Response\n\nUpon successful execution, the response will have a status code of 404 and a content type of `application/json`. The response body will contain a JSON object with a `message` key.\n\nExample:\n\n``` json\n{\n    \"message\": \"\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "turnover - admin",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/invoice/hospitalTurnover",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"hospitalTurnover"
							]
						},
						"description": "## Get Hospital Turnover\n\n> **Description:**  \nRetrieves the financial turnover of the hospital, including total revenue, total expenses, and net turnover. Only `ADMIN` users are allowed to access this API. \n  \n\n#### **Access Control:**\n\n- **Role Required:** `ADMIN`\n    \n---\n\n### **Request Parameters:**\n\nNone\n\n### **Response:**\n\n#### **Success Response (200 OK)**\n\n**Content-Type:** `application/json`\n\n``` json\n{\n  \"totalRevenue\": 500000.00,\n  \"totalExpenses\": 200000.00,\n  \"netTurnover\": 300000.00,\n  \"hospital\": {\n    \"id\": 1,\n    \"name\": \"String\",\n    \"location\": \"String\",\n    \"contact\": \"Number\"\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "invoice report",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/invoice/getHospitalReport",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getHospitalReport"
							]
						},
						"description": "# invoice Report\n\n> **Description:**  \nRetrieves a financial and staff report for the hospital, including total staff count, average salaries by role, total revenue, total expenses, and net profit. \n  \n\n**Access Control:**\n\n- **Role Required:** `ADMIN`\n    \n\n---\n\n### Request\n\nNo request body parameters are required for this endpoint.\n\n### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\nThe response body contains the following fields:\n\n- `totalProfit` (number): The total profit.\n    \n- `totalStaff` (number): The total number of staff.\n    \n- `roles` (array): An array of objects containing role-related information.\n    \n    - `role` (string): The role name.\n        \n    - `averageSalary` (number): The average salary for the role.\n        \n    - `roleCount` (number): The count of staff for the role.\n        \n- `totalExpenses` (number): The total expenses.\n    \n- `totalRevenue` (number): The total revenue."
					},
					"response": []
				},
				{
					"name": "get invoice by doctor id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/invoice/getInvoiceByDoctorId/😉1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getInvoiceByDoctorId",
								"😉1"
							]
						},
						"description": "# Get invoice by Doctor ID\n\n> **Description:**  \nFetches all billing details associated with a specific doctor based on their appointments. Only `RECEPTIONIST` users are authorized to access this API. \n  \n\n**Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n---\n\n## **Request Parameters:**\n\n| Parameter | Type | Required | Description |\n| --- | --- | --- | --- |\n| `doctorId` | `long` | Yes | The unique ID of the doctor |\n\n## **Response:**\n\n### **Success Response (200 OK)**\n\n**Content-Type:** `application/json`\n\n``` json\n{\n  \"patient\": {\n    \"patientId\": 101,\n    \"name\": \"John Doe\",\n    \"age\": 35,\n    \"gender\": \"Male\"\n  },\n  \"bills\": [\n    {\n      \"billId\": 2023,\n      \"appointmentId\": 5001,\n      \"hospitalId\": 10,\n      \"totalAmount\": 1000.00,\n      \"paidAmount\": 700.00,\n      \"dueAmount\": 300.00,\n      \"billingDate\": \"2025-02-01\",\n      \"status\": \"PARTIALLY_PAID\"\n    }\n  ]\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "get report by month and year",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/invoice/getHospitalReport/monthYear?month=5&year=2025",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"invoice",
								"getHospitalReport",
								"monthYear"
							],
							"query": [
								{
									"key": "month",
									"value": "5"
								},
								{
									"key": "year",
									"value": "2025"
								}
							]
						},
						"description": "### Retrieve Monthly invoice Report\n\n> **Description:**  \nRetrieves the hospital's financial report for a specific month and year, including total staff count, average salaries by role, total revenue, total expenses, and net profit. \n  \n\n**Access Control:**\n\n- **Role Required:** `ADMIN`\n    \n\n---\n\n## **Request Parameters:**\n\n| Parameter | Type | Required | Description |\n| --- | --- | --- | --- |\n| `month` | `int` | Yes | Month (1-12) for which the revenue report is requested. |\n| `year` | `int` | Yes | Year (greater than 1900 and up to the current year). |\n\n#### Response\n\nThe response will be in JSON format and will include the following fields:\n\n- `totalProfit` (number) - The total profit for the specified month and year.\n    \n- `totalStaff` (number) - The total number of staff for the specified month and year.\n    \n- `roles` (array) - An array of objects containing the following information for each role:\n    \n    - `role` (string) - The role name.\n        \n    - `roleCount` (number) - The count of staff for the role.\n        \n    - `averageSalary` (number) - The average salary for the role.\n        \n- `totalExpenses` (number) - The total expenses for the specified month and year.\n    \n- `totalRevenue` (number) - The total revenue for the specified month and year.\n    \n\n#### Example\n\n``` json\n{\n    \"totalProfit\": 0,\n    \"totalStaff\": 0,\n    \"roles\": [\n        {\n            \"role\": \"\",\n            \"roleCount\": 0,\n            \"averageSalary\": 0\n        }\n    ],\n    \"totalExpenses\": 0,\n    \"totalRevenue\": 0\n}\n\n ```"
					},
					"response": []
				}
			],
			"description": "The **Billing** module handles **invoice generation, payment processing, and financial records** for patient treatments, hospitalizations, and consultations. It ensures accurate **cost calculation** based on **doctor fees, room charges, nursing services, and additional expenses**."
		},
		{
			"name": "Hospitalization",
			"item": [
				{
					"name": "admit patient - receptionist",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospitalization/admitPatient/10?depositAmount=40&paymentMode=CREDIT_CARD&roomCategory=icu&paymentMode=UPI&paymentMode=DEBIT_CARD",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospitalization",
								"admitPatient",
								"10"
							],
							"query": [
								{
									"key": "depositAmount",
									"value": "40"
								},
								{
									"key": "paymentMode",
									"value": "CREDIT_CARD"
								},
								{
									"key": "roomCategory",
									"value": "icu"
								},
								{
									"key": "paymentMode",
									"value": "UPI"
								},
								{
									"key": "paymentMode",
									"value": "DEBIT_CARD"
								}
							]
						},
						"description": "### Admit patient\n\nThis endpoint is used to admit a patient to the hospital.\n\n#### **Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n#### Response\n\n- Status: 201\n    \n- Content-Type: application/json\n    \n\n``` json\n{\n    \"message\": \"\"\n}\n\n ```\n\n#### Request Body Parameters\n\n- No request body parameters are required for this endpoint.\n    \n\n#### Response Schema\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "update hospitalization record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospitalization/updateHospitalization/5?canteenCharges=380&additionalCharges=850&nursingCharges=430",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospitalization",
								"updateHospitalization",
								"5"
							],
							"query": [
								{
									"key": "canteenCharges",
									"value": "380"
								},
								{
									"key": "additionalCharges",
									"value": "850"
								},
								{
									"key": "nursingCharges",
									"value": "430"
								}
							]
						},
						"description": "### Update Hospitalization Details\n\nThis endpoint allows the user to update hospitalization details by sending an HTTP POST request with the hospitalization ID in the URL path and various charges as query parameters.\n\n#### Request Body\n\n- No request body is required for this endpoint.\n    \n\n#### Request Parameters\n\n- `canteenCharges` (number) - The charges for canteen services.\n    \n- `additionalCharges` (number) - Any additional charges incurred during hospitalization.\n    \n- `nursingCharges` (number) - The charges for nursing services.\n    \n\n#### Response\n\nThe response of this request is a JSON schema. Please refer to the schema for the structure and properties of the response.\n\nThis endpoint allows the user to add a deposit with the specified deposit amount and payment mode.\n\n#### Request\n\n- Method: POST\n    \n- URL: `http://localhost:8080/deposit/addDeposit/10`\n    \n- Headers:\n    \n    - Content-Type: `multipart/form-data`\n        \n- Body:\n    \n    - No request body parameters provided.\n        \n- Query Parameters:\n    \n    - depositAmount (number): The amount to be deposited.\n        \n    - paymentMode (array of strings): The mode of payment for the deposit.\n        \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```\n\n- `status` (string): The status of the deposit addition process.\n    \n- `message` (string): A message providing additional information about the deposit addition process.\n    \n\nThis endpoint allows the user to add a deposit with the specified deposit amount and payment mode.\n\n#### Request\n\n- Method: POST\n    \n- URL: `http://localhost:8080/deposit/addDeposit/10`\n    \n- Headers:\n    \n    - Content-Type: application/x-www-form-urlencoded\n        \n\n##### Parameters\n\n- depositAmount (number) - The amount to be deposited.\n    \n- paymentMode (string) - The mode of payment. Multiple payment modes can be specified.\n    \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```\n\n- `status` (string) - The status of the deposit addition request.\n    \n- `message` (string) - A message providing additional information about the deposit addition.\n    \n\nThis endpoint allows the user to add a deposit with the specified deposit amount and payment mode.\n\n#### Request\n\n- Method: POST\n    \n- URL: `http://localhost:8080/deposit/addDeposit/10?depositAmount=27&paymentMode=CREDIT_CARD&paymentMode=DEBIT_CARD&paymentMode=UPI&depositAmount=10000&paymentMode=INSURANCE`\n    \n- Headers:\n    \n    - Content-Type: `multipart/form-data`\n        \n\n#### Request Body\n\n- Type: form-data\n    \n\n#### Response\n\nThe response for this request is a JSON schema. It includes the schema for the response body.\n\nThis endpoint allows you to add a deposit with the specified deposit amount and payment mode.\n\n#### Request Body\n\n- No request body parameters are required for this request.\n    \n\n#### Request Parameters\n\n- Path Parameters\n    \n    - depositId (integer, required): The ID of the deposit to be added.\n        \n- Query Parameters\n    \n    - depositAmount (integer, required): The amount of the deposit.\n        \n    - paymentMode (string, required): The mode of payment for the deposit.\n        \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"data\": {\n    \"depositId\": \"integer\",\n    \"depositAmount\": \"integer\",\n    \"paymentMode\": \"string\"\n  }\n}\n\n ```\n\n- status (string): The status of the response.\n    \n- message (string): A message indicating the result of the deposit addition.\n    \n- data (object): An object containing the details of the added deposit, including depositId, depositAmount, and paymentMode."
					},
					"response": []
				},
				{
					"name": "discharge patient - receptionist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospitalization/discharge/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospitalization",
								"discharge",
								"10"
							]
						},
						"description": "### DIscharge patient\n\nThis endpoint is used to discharge a patient from the hospitalization with the specified ID.\n\n#### **Access Control:**\n\n- **Role Required:** `RECEPTIONIST`\n    \n\n### Request Body\n\nThe request should be sent as form-data with an empty body.\n\n### Response\n\n- Status: 201\n    \n- Content-Type: application/json\n    \n\nThe response will contain a JSON object with a \"message\" key indicating the success or details of the discharge process."
					},
					"response": []
				},
				{
					"name": "add deposit",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://localhost:8080/deposit/addDeposit/10?depositAmount=27&paymentMode=CREDIT_CARD&paymentMode=DEBIT_CARD&paymentMode=UPI&depositAmount=10000&paymentMode=INSURANCE",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"deposit",
								"addDeposit",
								"10"
							],
							"query": [
								{
									"key": "depositAmount",
									"value": "27"
								},
								{
									"key": "paymentMode",
									"value": "CREDIT_CARD"
								},
								{
									"key": "paymentMode",
									"value": "DEBIT_CARD"
								},
								{
									"key": "paymentMode",
									"value": "UPI"
								},
								{
									"key": "depositAmount",
									"value": "10000"
								},
								{
									"key": "paymentMode",
									"value": "INSURANCE"
								}
							]
						},
						"description": "# Add Deposite\n\nThis endpoint makes an HTTP POST request to add a deposit with a appointment ID . The request includes query parameters for depositAmount and paymentMode, where depositAmount has multiple values and paymentMode is repeated with different values. The request uses form-data as the request body type.\n\n### Request\n\n- Method: POST\n    \n- URL: `http://localhost:8080/deposit/addDeposit/10`\n    \n- Query Parameters:\n    \n    - depositAmount (repeated): 27, 10000\n        \n    - paymentMode (repeated): CREDIT_CARD, DEBIT_CARD, UPI, INSURANCE\n        \n- Body (form-data): Empty\n    \n\n### Response\n\nThe response for this request is not provided. Please refer to the API documentation or contact the API provider for information about the response schema."
					},
					"response": []
				}
			],
			"description": "The **Hospitalization** module manages patient **admit, discharges, and related hospital stay details** such as room allocation, nursing charges, and additional services."
		},
		{
			"name": "Hospital Extra Charges",
			"item": [
				{
					"name": "Adding hospital extra charges Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBnbWFpbC5jb20iLCJpYXQiOjE3NDIzMDA4ODN9.bK04T8mxwiiP1WnOVyorMuneX7h4FgFrX-L0IHoG58A",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"chargeType\": ,\r\n    \"amount\": 1223\r\n   \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/hospitalCharges/add/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospitalCharges",
								"add",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Year calculation of hospital extra charges Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBnbWFpbC5jb20iLCJpYXQiOjE3NDIzMDA4ODN9.bK04T8mxwiiP1WnOVyorMuneX7h4FgFrX-L0IHoG58A",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospitalCharges/yearly/1/2025",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospitalCharges",
								"yearly",
								"1",
								"2025"
							]
						}
					},
					"response": []
				},
				{
					"name": "Calculating monthly extra charges Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBnbWFpbC5jb20iLCJpYXQiOjE3NDIzMDA4ODN9.bK04T8mxwiiP1WnOVyorMuneX7h4FgFrX-L0IHoG58A",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospitalCharges/monthly/1/2025/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospitalCharges",
								"monthly",
								"1",
								"2025",
								"3"
							],
							"query": [
								{
									"key": "hospitalId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "year",
									"value": "2025",
									"disabled": true
								},
								{
									"key": "month",
									"value": "03",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update hospital charges Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBnbWFpbC5jb20iLCJpYXQiOjE3NDIzMDA4ODN9.bK04T8mxwiiP1WnOVyorMuneX7h4FgFrX-L0IHoG58A",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"chargeType\": \"xyzsst\",\r\n    \"amount\": 1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/hospitalCharges/update/522",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospitalCharges",
								"update",
								"522"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Hospital",
			"item": [
				{
					"name": "Add Hospital - Super Admin",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"xyz Hospital\",\r\n    \"address\":\"word no 20, Pune\",\r\n    \"contactNumber\":1234867890,\r\n    \"emailId\":\"xyz@gmail.com\",\r\n    \"numberOfUsers\":90,\r\n    \"branch\":\"Mumbai, Pune, jalgaon, dhule\",\r\n    \"departments\":\"Surgical, Dermatology\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/hospital/addHospital",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospital",
								"addHospital"
							]
						},
						"description": "### Add Hospital\n\nThis API endpoint is used to create a new hospital in the system.\n\n#### **Access**\n\n- Super Admin\n    \n\n#### Request Body\n\n- Form-Data\n    \n    - No parameters required.\n        \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Get all Hospital - Super Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospital/getAllHospital",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospital",
								"getAllHospital"
							]
						},
						"description": "This API allows you to retrieve all hospitals registered in the system. It provides a complete list of available hospitals.\n\n#### **Access**\n\n- Super Admin"
					},
					"response": []
				},
				{
					"name": "Get Hospital By Id - Super Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzd2Fwbmlsc3VkcmlrLnNAZ21haWwuY29tIiwiaWF0IjoxNzQwNjM3NTM4fQ.F-ynvIzOb0S27U9SctcL_qSq9FYV84iUVIG10uCOl6U",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospital/getHospitalbyId/hdhjdh",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospital",
								"getHospitalbyId",
								"hdhjdh"
							]
						},
						"description": "This API allows you to retrieve hospital details using the hospital ID. It fetches specific hospital information from the system.\n\n#### **Access**\n\n- Super Admin"
					},
					"response": []
				},
				{
					"name": "Update Hospital By Id - Super Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzd2Fwbmlsc3VkcmlrLnNAZ21haWwuY29tIiwiaWF0IjoxNzQwNjM3NTM4fQ.F-ynvIzOb0S27U9SctcL_qSq9FYV84iUVIG10uCOl6U",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Chetan Hospital\",\r\n    \"address\":\"word no 20, Pune\",\r\n    \"contactNumber\":1234567890,\r\n    \"emailId\":\"chetanhospital@gmail.com\",\r\n    \"numberOfUsers\":90,\r\n    \"branch\":\"Mumbai, Pune, jalgaon, dhule\",\r\n    \"departments\":\"Surgical, Dermatology\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/hospital/updateHospitalbyId/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospital",
								"updateHospitalbyId",
								"1"
							]
						},
						"description": "This API allows you to update hospital details using the hospital ID. It ensures that the existing hospital information is modified as needed.\n\n#### **Access**\n\n- Super Admin"
					},
					"response": []
				},
				{
					"name": "Active and Deactive Hospital By Id - Super Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzd2Fwbmlsc3VkcmlrLnNAZ21haWwuY29tIiwiaWF0IjoxNzQwNjM3NTM4fQ.F-ynvIzOb0S27U9SctcL_qSq9FYV84iUVIG10uCOl6U",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospital/activeAndDeactivateHospitalbyId/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospital",
								"activeAndDeactivateHospitalbyId",
								"2"
							]
						},
						"description": "This API allows you to deactivate hospital using its ID. It deactivate the hospital record from the system.\n\n#### **Access**\n\n- Super Admin"
					},
					"response": []
				},
				{
					"name": "Get Hospital By Name - Super Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzd2Fwbmlsc3VkcmlrLnNAZ21haWwuY29tIiwiaWF0IjoxNzQwNjM3NTM4fQ.F-ynvIzOb0S27U9SctcL_qSq9FYV84iUVIG10uCOl6U",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospital/getHospitalbyName/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospital",
								"getHospitalbyName",
								""
							]
						},
						"description": "This API allows you to retrieve hospital details using the hospital name. It helps in finding specific hospitals registered in the system.\n\n#### **Access**\n\n- Super Admin"
					},
					"response": []
				},
				{
					"name": "Get All Active Hospital - Super Admin",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospital/allActiveHospitals",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospital",
								"allActiveHospitals"
							]
						},
						"description": "This API allows you to retrieve a list of all active hospitals registered in the system.\n\n#### **Access**\n\n- Super Admin"
					},
					"response": []
				},
				{
					"name": "Get All Deactivated Hospital - Super Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzd2Fwbmlsc3VkcmlrLnNAZ21haWwuY29tIiwiaWF0IjoxNzQwNzM3MDQ4fQ.Ek16Fx5M3rLWGnKfd1EIYVdpUxMLdiEGhUBXCVj0N6Y",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospital/allDeactivatedHospitals",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospital",
								"allDeactivatedHospitals"
							]
						},
						"description": "This API allows you to retrieve a list of all deactivated hospitals in the system.\n\n#### **Access**\n\n- Super Admin"
					},
					"response": []
				},
				{
					"name": "Get Branch by hospital Id - Super admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/hospital/getBranchesbyHospitalId/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"hospital",
								"getBranchesbyHospitalId",
								"2"
							]
						}
					},
					"response": []
				}
			],
			"description": "The **Hospital** module manages hospital creation, updates, and retrieval within the system. It is primarily handled by **SUPER_ADMIN** to register and manage hospitals."
		},
		{
			"name": "Catlog",
			"item": [
				{
					"name": "Add Catalog - Admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "category",
									"value": "ROO - hjdhsk",
									"type": "text"
								},
								{
									"key": "name",
									"value": "ggfgh & hjh",
									"type": "text"
								},
								{
									"key": "fees",
									"value": "9999999",
									"type": "text"
								},
								{
									"key": "description",
									"value": "hello hjs - hkdsfd.",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/catalog/addCatalog",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"catalog",
								"addCatalog"
							]
						},
						"description": "This API allows you to create a catalog for the hospital. It helps in managing and organizing hospital services.\n\n#### **Access**\n\n- Admin"
					},
					"response": []
				},
				{
					"name": "Get All Catalog By Hospital Id - Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsb2tlc2hjaG91ZGhhcnkxQGdtYWlsLmNvbSIsImlhdCI6MTc0MDk4MzY5NH0.lIMGx7FGyHXLoX-x7Dk_TBGMutLjzoFeqzr3xwkawbI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/catalog/getCatalogbyHospitalId/     ",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"catalog",
								"getCatalogbyHospitalId",
								"     "
							]
						},
						"description": "This API allows you to retrieve all catalogs associated with a specific hospital using its ID.\n\n#### **Access**\n\n- Admin"
					},
					"response": []
				},
				{
					"name": "Get Catalog by Service Name - Admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/catalog/getCatalogbyServiceName/&&&",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"catalog",
								"getCatalogbyServiceName",
								"&&&"
							]
						},
						"description": "This API allows you to retrieve a list of all service names.\n\n#### **Access**\n\n- Admin"
					},
					"response": []
				},
				{
					"name": "Get Catalog By Catagory - Admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/catalog/getCatalogbyCategory/     ",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"catalog",
								"getCatalogbyCategory",
								"     "
							]
						},
						"description": "This API allows you to retrieve catalogs based on category.\n\n#### **Access**\n\n- Admin"
					},
					"response": []
				},
				{
					"name": "Get Catalog by id - Admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/catalog/getCatalogbyId/4.99",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"catalog",
								"getCatalogbyId",
								"4.99"
							]
						},
						"description": "This API allows you to retrieve a catalog using its ID.\n\n#### **Access**\n\n- Admin"
					},
					"response": []
				},
				{
					"name": "Update Catalog by id - Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsb2tlc2hjaG91ZGhhcnkxQGdtYWlsLmNvbSIsImlhdCI6MTc0MDk4MzY5NH0.lIMGx7FGyHXLoX-x7Dk_TBGMutLjzoFeqzr3xwkawbI",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "category",
									"value": "ROOM",
									"type": "text"
								},
								{
									"key": "name",
									"value": "X - ray",
									"type": "text"
								},
								{
									"key": "fees",
									"value": "3505",
									"type": "text"
								},
								{
									"key": "description",
									"value": "kmjnhbgvf",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": "postman-cloud:///1efe2e4d-346f-4b40-a67b-8dfe30a2886f"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/catalog/updateCatalogbyId/105",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"catalog",
								"updateCatalogbyId",
								"105"
							]
						},
						"description": "This API allows you to update the catalog using the catalog ID. It enables modifications to existing catalog details.\n\n#### **Access**\n\n- Admin"
					},
					"response": []
				},
				{
					"name": "Active and De-Active Catalog by id - Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsb2tlc2hjaG91ZGhhcnkxQGdtYWlsLmNvbSIsImlhdCI6MTc0MDk4MzY5NH0.lIMGx7FGyHXLoX-x7Dk_TBGMutLjzoFeqzr3xwkawbI",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/catalog/activeAndDeactivateCatalogbyId/null",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"catalog",
								"activeAndDeactivateCatalogbyId",
								"null"
							]
						},
						"description": "This API allows you to deactivate a catalog, making it unavailable for use.\n\n#### **Access**\n\n- Admin"
					},
					"response": []
				},
				{
					"name": "Get All Active Catalog - Admin",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/catalog/getAllActiveCatalogs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"catalog",
								"getAllActiveCatalogs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all deactivated catalog List - Admin",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/catalog/getAllDeactiveCatalogs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"catalog",
								"getAllDeactiveCatalogs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get images by id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/catalog/images/118",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"catalog",
								"images",
								"118"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Appointment",
			"item": [
				{
					"name": "Book Appointment (RECEPTIONIST)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"doctor\": {\r\n        \"id\": 5\r\n    },\r\n    \"patientDTO\": {\r\n        \"name\":  \"ommfgdgh\",\r\n        \"contactNumber\": \"1234567859\",\r\n        \"whatsAppNumber\": \"9087654321\",\r\n        \"emailId\": \"ravindra@gmail.co\",\r\n        \"dateOfBirth\": \"May 15, 1990\",\r\n        \"gender\": \" Female \",\r\n        \"bloodGroup\": \"b+ \"\r\n    },\r\n    \"appointmentStatus\":\"SCHEDULED\",\r\n    \"appointmentDateAndTime\": \"2025/10/10T16:16:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/appointments/bookAppointment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"appointments",
								"bookAppointment"
							]
						},
						"description": "Here receptionist allowed to book appointment of patients."
					},
					"response": []
				},
				{
					"name": "Update Appointment (DOCTOR)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyZWNlcHRpb25pc3RAZ21haWwuY29tIiwiaWF0IjoxNzQwOTIwODgyfQ.H_pglncrGFo992l4q50Hr3Jg6Sez9Bj6bJKRdY5pvkg",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"patientDTO\": {\r\n        \"name\": \"Heera Thakuru\",\r\n        \"contactNumber\": \"9923933431\",\r\n       \"whatsAppNumber\": \"1234567890\",\r\n        \"emailId\": \"ravindrasomvanshi22@gmail.com\",\r\n        \"dateOfBirth\": \"22 feb 2001\",\r\n        \"gender\": \" male \",\r\n        \"bloodGroup\": \"O+\",\r\n        \"status\": 1,\r\n        \"currentStatus\": 1,\r\n        \"diet\":\"VEG\"\r\n    },\r\n    \"weight\": 172,\r\n    \"height\": 72,\r\n    \"bloodPressure\": \"120/90\",\r\n    \"heartRate\": 72,\r\n    \"bodyTemperature\": 97.6,\r\n    \"respiratoryRate\": 30,\r\n    \"clinicalNote\": \"Patient shows good recovery signs.\",\r\n   // \"appointmentStatus\": \"ENGAGED\",\r\n   \"appointmentStatus\": \"COMPLETED\",\r\n    \"pulseRate\": 100,\r\n    \"currentDoctor\":7,\r\n    \"fetchClinicalNote\": 1,\r\n    \"nextAppointmentDate\": \"2025-12-30\",\r\n    \"symptoms\": \"Headache, fatigue\",\r\n    \"allergies\": \"qer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/appointments/updateAppointmentbyId/345678",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"appointments",
								"updateAppointmentbyId",
								"345678"
							]
						},
						"description": "This API allow to update appointment."
					},
					"response": []
				},
				{
					"name": "Cancel Appointment (RECEPTIONIST)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyZWNlcHRpb25pc3RAZ21haWwuY29tIiwiaWF0IjoxNzQwOTIwODgyfQ.H_pglncrGFo992l4q50Hr3Jg6Sez9Bj6bJKRdY5pvkg",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/appointments/cancelAppointmentbyId/35",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"appointments",
								"cancelAppointmentbyId",
								"35"
							]
						},
						"description": "This API allow to cancel appointment."
					},
					"response": []
				},
				{
					"name": "Delete Appointment (ADMIN)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjFAZ21haWwuY29tIiwiaWF0IjoxNzQwNjYyMjA0fQ.h4RpJ3vGuk92hBX06lnGOy-_rNxNCnlkuKCPXHrFHKU",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/appointments/deleteAppointmentbyId/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"appointments",
								"deleteAppointmentbyId",
								"1"
							]
						},
						"description": "This API allow to Delete Appointment By ADMIN only"
					},
					"response": []
				},
				{
					"name": "Get Appointment By ID (ADMIN,DOCTOR)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzYW5qYW5hQGdtYWlsLmNvbSIsImlhdCI6MTc0MDY2MjcwMH0.lSldzbboCS3vXtYMCfT6J0qE41gEC31aj0QSJTC1zh4",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "http://localhost:8080/appointments/getAppointmentbyId/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"appointments",
								"getAppointmentbyId",
								"0"
							]
						},
						"description": "This Api fetch appointments by appointmentId."
					},
					"response": []
				},
				{
					"name": "Get All Appointments ( ADMIN , DOCTOR )",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzYW5qYW5hQGdtYWlsLmNvbSIsImlhdCI6MTc0MDY2MjcwMH0.lSldzbboCS3vXtYMCfT6J0qE41gEC31aj0QSJTC1zh4",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/appointments/getAllAppointments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"appointments",
								"getAllAppointments"
							]
						},
						"description": "This api fetch all appointments."
					},
					"response": []
				},
				{
					"name": "Get Appointment By Patient Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzYW5qYW5hQGdtYWlsLmNvbSIsImlhdCI6MTc0MDY2MjcwMH0.lSldzbboCS3vXtYMCfT6J0qE41gEC31aj0QSJTC1zh4",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/appointments/getAppointmentsbyPatientId/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"appointments",
								"getAppointmentsbyPatientId",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appointment By Date(RECEPTIONIST,ADMIN,DOCTOR)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyZWNlcHRpb25pc3RAZ21haWwuY29tIiwiaWF0IjoxNzQwOTIwODgyfQ.H_pglncrGFo992l4q50Hr3Jg6Sez9Bj6bJKRdY5pvkg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/appointments/getAppointmentsbyDate/Oct 27 2025",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"appointments",
								"getAppointmentsbyDate",
								"Oct 27 2025"
							]
						},
						"description": "This Api fetrch all appointments by Date"
					},
					"response": []
				},
				{
					"name": "Branchwise Appointment (ADMIN,DOCTOR,RECEPTIONIST)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyZWNlcHRpb25pc3RAZ21haWwuY29tIiwiaWF0IjoxNzQwOTIwODgyfQ.H_pglncrGFo992l4q50Hr3Jg6Sez9Bj6bJKRdY5pvkg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/appointments/getAppointmentsbyBranch",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"appointments",
								"getAppointmentsbyBranch"
							]
						},
						"description": "This Api fetch all appointments by perticular branch."
					},
					"response": []
				}
			]
		},
		{
			"name": "Leaves",
			"item": [
				{
					"name": "CreateLeave",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromDate\": \"4/May/2025\",\r\n  \"toDate\": \"2025-May-09\",\r\n  \"concern\": \"Medical emergency\",\r\n  \"type\": \"SICK\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/leave/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"leave",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "ByDateRange",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/leave/getLeavesByDateRange?fromDate=2025-04-25&toDate=2025-04-30",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"leave",
								"getLeavesByDateRange"
							],
							"query": [
								{
									"key": "fromDate",
									"value": "2025-04-25"
								},
								{
									"key": "toDate",
									"value": "2025-04-30"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Rating",
			"item": [
				{
					"name": "Add Review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjFAZ21haWwuY29tIiwiaWF0IjoxNzQwNzM1OTIyfQ.dGrX6IGLF46F_V6X9yr1-DBwaS5eh_qJgeWXV_Vzhgs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"review\": \"I had a wonderful experience at CityCare Hospital. The infrastructure is modern and well-maintained, making patients feel comfortable and safe. The medical staff is professional, attentive, and compassionate. From the doctors to the nursing team, everyone ensured I received the best care possible. The waiting times were minimal, and the administrative process was smooth and efficient. Overall, I highly recommend CityCare Hospital for anyone seeking quality healthcare services.\",\r\n  \"rating\": 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/reviews/hospital/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reviews",
								"hospital",
								"7"
							]
						},
						"description": "### **Add Review API**\n\n**Endpoint:** `POST /rating/{entityType}/{entityId}`  \n**Description:**\n\nThis API allows an authenticated user to add a review and rating for a **Hospital**, **Doctor**, or **Caretaker**, based on the specified entity type and ID.\n\nStartFragment\n\n#### **Path Parameters:**\n\n- `entityType` (String): Type of the entity to review. Accepted values:\n    \n    - `HOSPITAL`\n        \n    - `DOCTOR`\n        \n    - `CARETAKER`\n        \n- `entityId` (Long): Unique ID of the corresponding hospital, doctor, or caretaker."
					},
					"response": []
				},
				{
					"name": "get all hospital rating with avrage",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzd2Fwbmlsc3VkcmlrLnNAZ21haWwuY29tIiwiaWF0IjoxNzQwNzM1NzU4fQ.dJWrvwSUsO5hmpJ6ZNDTiU2UuwaaZXER5Lbk1ncWVlk",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/reviews/all/hospitals",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reviews",
								"all",
								"hospitals"
							]
						},
						"description": "### **Get All Hospital Reviews with Average Ratings**\n\n**Endpoint:** `GET /rating/all/hospitals/with-average`  \n**Description:**\n\nThis API retrieves all hospitals that have at least one review and returns each hospital's details, including the **average rating**, **total number of ratings**, and a **list of all reviews**.\n\n#### **Response Structure:**\n\nReturns a list of hospitals with their associated reviews and average ratings."
					},
					"response": []
				},
				{
					"name": "get all doctor rating with avrage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzd2Fwbmlsc3VkcmlrLnNAZ21haWwuY29tIiwiaWF0IjoxNzQwNzM1NzU4fQ.dJWrvwSUsO5hmpJ6ZNDTiU2UuwaaZXER5Lbk1ncWVlk",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/reviews/all/doctors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reviews",
								"all",
								"doctors"
							]
						},
						"description": "### **Get All Doctor Reviews with Average Ratings**\n\n**Endpoint:** `GET /rating/all/doctors/with-average`  \n**Description:**\n\nThis API retrieves all doctors who have received at least one review and returns each doctor's:\n\n- Basic info (ID and name)\n    \n- **Average rating**\n    \n- **Total number of ratings**\n    \n- **Detailed list of all reviews**\n    \n\nOnly users with the role `DOCTOR` are considered for this aggregation."
					},
					"response": []
				},
				{
					"name": "get all caretaker rating with avrage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzd2Fwbmlsc3VkcmlrLnNAZ21haWwuY29tIiwiaWF0IjoxNzQwNzM1NzU4fQ.dJWrvwSUsO5hmpJ6ZNDTiU2UuwaaZXER5Lbk1ncWVlk",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/reviews/all/caretakers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reviews",
								"all",
								"caretakers"
							]
						},
						"description": "### **Get All Caretaker Reviews with Average Ratings**\n\n**Endpoint:** `GET /rating/all/caretakers/with-average`  \n**Description:**\n\nThis API retrieves **all reviews for staff members with the role** **`CARETAKER`**, grouped by caretaker, and calculates the **average rating** for each. It returns a detailed response including caretaker info, total number of ratings, and individual rating details."
					},
					"response": []
				},
				{
					"name": "get rating by hospital id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjFAZ21haWwuY29tIiwiaWF0IjoxNzQwNzM1OTIyfQ.dGrX6IGLF46F_V6X9yr1-DBwaS5eh_qJgeWXV_Vzhgs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/reviews/hospital/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reviews",
								"hospital",
								"2"
							]
						},
						"description": "### **Get Reviews for a Specific Hospital**\n\n**Endpoint:** `GET /rating/hospital/{hospitalId}`  \n**Description:**\n\nThis API retrieves **all reviews and ratings** submitted for a specific hospital by its `hospitalId`. It returns the hospital's basic info along with a list of all associated reviews."
					},
					"response": []
				},
				{
					"name": "get rating by doctor id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjFAZ21haWwuY29tIiwiaWF0IjoxNzQwNzM1OTIyfQ.dGrX6IGLF46F_V6X9yr1-DBwaS5eh_qJgeWXV_Vzhgs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/reviews/doctor/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reviews",
								"doctor",
								"3"
							]
						},
						"description": "**Get Reviews for a Specific Doctor**\n\n**Endpoint:** `GET /rating/doctor/{doctorId}`  \n**Description:**\n\nThis API retrieves **all reviews and ratings** submitted for a specific doctor using the given `doctorId`. It returns the doctor's basic information and all their associated reviews."
					},
					"response": []
				},
				{
					"name": "get rating by caretaker id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjFAZ21haWwuY29tIiwiaWF0IjoxNzQwNzM1OTIyfQ.dGrX6IGLF46F_V6X9yr1-DBwaS5eh_qJgeWXV_Vzhgs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/reviews/caretaker/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reviews",
								"caretaker",
								"3"
							]
						},
						"description": "### **Get Reviews for a Specific Caretaker**\n\n**Endpoint:** `GET /rating/caretaker/{caretakerId}`  \n**Description:**  \n  \nThis API retrieves all **ratings and reviews** for a specific caretaker using the provided `caretakerId`. If no reviews are present, a meaningful message is returned."
					},
					"response": []
				},
				{
					"name": "delete review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjFAZ21haWwuY29tIiwiaWF0IjoxNzQwNzM1OTIyfQ.dGrX6IGLF46F_V6X9yr1-DBwaS5eh_qJgeWXV_Vzhgs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"review\": \"I had a wonderful experience at CityCare Hospital. The infrastructure is modern and well-maintained, making patients feel comfortable and safe. The medical staff is professional, attentive, and compassionate. From the doctors to the nursing team, everyone ensured I received the best care possible. The waiting times were minimal, and the administrative process was smooth and efficient. Overall, I highly recommend CityCare Hospital for anyone seeking quality healthcare services.\",\r\n  \"rating\": 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/reviews/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reviews",
								"3"
							]
						},
						"description": "### **Add Review API**\n\n**Endpoint:** `POST /rating/{entityType}/{entityId}`  \n**Description:**\n\nThis API allows an authenticated user to add a review and rating for a **Hospital**, **Doctor**, or **Caretaker**, based on the specified entity type and ID.\n\nStartFragment\n\n#### **Path Parameters:**\n\n- `entityType` (String): Type of the entity to review. Accepted values:\n    \n    - `HOSPITAL`\n        \n    - `DOCTOR`\n        \n    - `CARETAKER`\n        \n- `entityId` (Long): Unique ID of the corresponding hospital, doctor, or caretaker."
					},
					"response": []
				}
			]
		},
		{
			"name": "OTP",
			"item": [
				{
					"name": "generate otp",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/otp/generate/admin@xyz.com",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"otp",
								"generate",
								"admin@xyz.com"
							]
						},
						"description": "### Generate OTP\n\nThe endpoint triggers an HTTP POST request to generate a one-time password (OTP) for the provided email address.\n\n#### **Access Control:**\n\n- **Role Required:** No Role Required\n    \n\n#### Request Body\n\n- email (string): The email address for which the OTP needs to be generated.\n    \n\n#### Response Body\n\nThe response will be in JSON format with the following schema:\n\n``` json\n{\n  \"id\": {\n    \"type\": \"integer\"\n  },\n  \"email\": {\n    \"type\": \"string\"\n  },\n  \"otp\": {\n    \"type\": \"string\"\n  },\n  \"createdDateTime\": {\n    \"type\": \"string\",\n    \"format\": \"date-time\"\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "verify otp",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"otp\":\"054146\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/otp/verify/admin@xyz.com",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"otp",
								"verify",
								"admin@xyz.com"
							]
						},
						"description": "### Verify OTP\n\nThis HTTP POST request is used to verify a one-time password (OTP) for a specific user. The request should be sent to [http://localhost:8080/otp/verify/swapnilsudrik.s@gmail.com](http://localhost:8080/otp/verify/swapnilsudrik.s@gmail.com) with a raw request body containing the OTP value in JSON format.\n\n#### **Access Control:**\n\n- **Role Required:** No Access Required\n    \n\n### Request Body\n\n- `otp` (text): The one-time password to be verified.\n    \n\n### Response\n\nThe response for this request can be represented with the following JSON schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": { \"type\": \"number\" },\n    \"content-type\": { \"type\": \"string\" },\n    \"message\": { \"type\": \"string\" }\n  }\n}\n\n ```\n\nUpon successful execution, the server responds with a status code of 200 and a content type of text/plain, along with the message \"OTP Successfully Verified!\"."
					},
					"response": []
				}
			],
			"description": "The OTP module is responsible for generating, sending, and verifying One-Time Passwords (OTP) for authentication and security."
		},
		{
			"name": "Caretaker",
			"item": [
				{
					"name": "Book CareTaker",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n  \"caretakerId\": 14,\r\n  \"startDate\": \"2025-05-15\",\r\n  \"fromTime\": \"04:01\",\r\n  \"toTime\": \"05:00\",\r\n  //\"endDate\":\"2025-05-13\",\r\n  \"address\": \"123 Main Street, Springfield\",\r\n  \"notes\": \"Requires wheelchair assistance.\"\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/caretakers/book",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"caretakers",
								"book"
							]
						}
					},
					"response": []
				},
				{
					"name": "get All caretakers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/caretakers/getAllCaretakers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"caretakers",
								"getAllCaretakers"
							]
						}
					},
					"response": []
				},
				{
					"name": "get bookings by careTakerID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhdmluYXNoQGdtYWlsLmNvbSIsImlhdCI6MTc0NzEzNDkzMX0.eVzN0_Y8az7D4IKRg6lSORUJYoOR4uh4H2ZzmFyeO1U",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/caretakers/getCaretakerBookings/14",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"caretakers",
								"getCaretakerBookings",
								"14"
							]
						}
					},
					"response": []
				},
				{
					"name": "get All Bookings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/caretakers/getAllbookings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"caretakers",
								"getAllbookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Booking",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/caretakers/cancelBooking/38",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"caretakers",
								"cancelBooking",
								"38"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Setting",
			"item": [
				{
					"name": "add and update setting",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "hospitalOpeningTime",
									"value": "10:00",
									"type": "text"
								},
								{
									"key": "hospitalClosingTime",
									"value": "23:59",
									"type": "text"
								},
								{
									"key": "hospitalWorkingDays",
									"value": "Monday,Tuesday,wednesday,thursday,friday",
									"type": "text"
								},
								{
									"key": "hospitalOffDays",
									"value": "Saturday,Sunday",
									"type": "text"
								},
								{
									"key": "letterHead",
									"type": "file",
									"src": "/C:/Users/DELL/Downloads/logo 4.jpg"
								},
								{
									"key": "logo",
									"type": "file",
									"src": "/C:/Users/DELL/Downloads/logo 3.png"
								},
								{
									"key": "hospital.id",
									"value": "3",
									"type": "text"
								},
								{
									"key": "noOfAmbulances",
									"value": "5",
									"type": "text"
								},
								{
									"key": "ambulanceContactNumber",
									"value": "1234567823",
									"type": "text"
								},
								{
									"key": "ambulanceBookingTime",
									"value": "24 Hours",
									"type": "text"
								},
								{
									"key": "ambulanceCharges",
									"value": "23",
									"type": "text"
								},
								{
									"key": "gstNumber",
									"value": "22AAAAA1234A1Z5",
									"type": "text"
								},
								{
									"key": "applyGst",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/settings/createOrUpdateSettings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"settings",
								"createOrUpdateSettings"
							]
						},
						"description": "### **Endpoint:**\n\n**POST** `/settings/createOrUpdateSettings`\n\n### **Description:**\n\nThis API is used to create or update hospital settings, including hospital opening/closing time, working/off days, ambulance details, and logo/letterhead.\n\n### **Authorization:**\n\n**SUPER_ADMIN** access required.\n\n### **Request Parameters (Multipart Form-Data):**\n\n| Parameter | Type | Required | Description |\n| --- | --- | --- | --- |\n| `hospital.id` | `Long` | Yes | The ID of the hospital to which the settings belong. |\n| `hospitalOpeningTime` | `String` | Yes | Opening time in `HH:mm` format (between `06:00` and `10:00`). |\n| `hospitalClosingTime` | `String` | Yes | Closing time in `HH:mm` format. |\n| `hospitalWorkingDays` | `String` | Yes | Comma-separated days (e.g., `Monday, Tuesday`). |\n| `hospitalOffDays` | `String` | Yes | Comma-separated off days (e.g., `Sunday`). |\n| `letterHead` | `File` | Yes | Hospital letterhead (JPG, JPEG, PNG). |\n| `logo` | `File` | Yes | Hospital logo (JPG, JPEG, PNG). |\n| `noOfAmbulances` | `Integer` | Yes | Number of ambulances (Non-negative integer). |\n| `ambulanceCharges` | `Double` | Yes | Ambulance charges (Required if `noOfAmbulances` > 0). |\n| `ambulanceBookingTime` | `String` | Yes | Booking time for ambulances. |\n| `ambulanceContactNumber` | `String` | Yes | Contact number for ambulance services. |"
					},
					"response": [
						{
							"name": "add and update setting",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "hospitalOpeningTime",
											"value": "10:00",
											"type": "text"
										},
										{
											"key": "hospitalClosingTime",
											"value": "23:59",
											"type": "text"
										},
										{
											"key": "hospitalWorkingDays",
											"value": "Monday,Tuesday,wednesday,thursday,friday",
											"type": "text"
										},
										{
											"key": "hospitalOffDays",
											"value": "Saturday,Sunday",
											"type": "text"
										},
										{
											"key": "letterHead",
											"type": "file",
											"src": "/C:/Users/DELL/Downloads/new jpg image.jpg"
										},
										{
											"key": "logo",
											"type": "file",
											"src": "/C:/Users/DELL/Downloads/new jpg image.jpg"
										},
										{
											"key": "hospital.id",
											"value": "5",
											"type": "text"
										},
										{
											"key": "noOfAmbulances",
											"value": "12",
											"type": "text"
										},
										{
											"key": "ambulanceContactNumber",
											"value": "1234567800",
											"type": "text"
										},
										{
											"key": "ambulanceBookingTime",
											"value": "24 Hours",
											"type": "text"
										},
										{
											"key": "ambulanceCharges",
											"value": "123",
											"type": "text"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "http://localhost:8080/settings/createOrUpdateSettings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"settings",
										"createOrUpdateSettings"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 04 Mar 2025 18:11:41 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"hospitalOpeningTime\": \"10:00\",\n    \"hospitalClosingTime\": \"23:59\",\n    \"hospitalWorkingDays\": \"Monday,Tuesday,wednesday,thursday,friday\",\n    \"hospitalOffDays\": \"Saturday,Sunday\",\n    \"hospital\": {\n        \"id\": 5,\n        \"name\": \"CHospital\",\n        \"address\": \"cHVuZSA2NzQzNjcu\",\n        \"contactNumber\": \"8889995566\",\n        \"emailId\": \"chospital@gmail.com\",\n        \"openingTime\": \"09:30:00\",\n        \"closingTime\": \"09:00:00\",\n        \"branch\": \"TXVtYmFpLCBQdW5l\",\n        \"workingDays\": \"Monday - Saturday\",\n        \"offDays\": \"Sunday\",\n        \"numberOfUsers\": \"32\",\n        \"departments\": \"U3VyZ2ljYWwsIERlcm1hdG9sb2d5\",\n        \"createdUser\": {\n            \"id\": 1,\n            \"username\": \"swapnilsudrik.s@gmail.com\",\n            \"name\": \"swapnil\",\n            \"password\": \"$2a$10$qPDBWY/pHgDY7brEZtMpzOEvZHvjUQk8mnFJZMgNbgtfInsWPnF6y\",\n            \"branch\": null,\n            \"roles\": \"SUPER_ADMIN\",\n            \"hospital\": null,\n            \"createdUser\": 1,\n            \"modifiedUser\": 1,\n            \"createdDate\": \"2025-03-03\",\n            \"modifiedDate\": \"2025-03-03\",\n            \"status\": 1\n        },\n        \"modifiedUser\": 1,\n        \"createdDate\": \"2025-03-04\",\n        \"modifiedDate\": \"2025-03-04\",\n        \"status\": 1\n    },\n    \"noOfAmbulances\": 12,\n    \"ambulanceContactNumber\": \"1234567800\",\n    \"ambulanceBookingTime\": \"24 Hours\",\n    \"ambulanceCharges\": 123,\n    \"createdUser\": 1,\n    \"modifiedUser\": 1,\n    \"createdDate\": \"2025-03-04T18:11:41.171+00:00\",\n    \"modifiedDate\": null,\n    \"status\": 1\n}"
						}
					]
				},
				{
					"name": "get all setting",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzd2Fwbmlsc3VkcmlrLnNAZ21haWwuY29tIiwiaWF0IjoxNzQyMzAxMDM1fQ.33ENmMyF0e1raPWiZdXBYwYUCFMXaK7WV654Pe-hu0I",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/settings/getAllSettings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"settings",
								"getAllSettings"
							]
						},
						"description": "### **Endpoint:**\n\n**GET** `/settings/getSettings`\n\n### **Description:**\n\nFetches all available hospital settings.\n\n### **Authorization:**\n\n**SUPER_ADMIN** access required."
					},
					"response": [
						{
							"name": "get all setting",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/settings/getSettings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"settings",
										"getSettings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 04 Mar 2025 18:12:29 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"hospitalOpeningTime\": \"10:00:00.000000\",\n        \"hospitalClosingTime\": \"23:59:00.000000\",\n        \"hospitalWorkingDays\": \"Monday,Tuesday,wednesday,thursday,friday\",\n        \"hospitalOffDays\": \"Saturday,Sunday\",\n        \"hospital\": {\n            \"id\": 1,\n            \"name\": \"Punawala Hospital\",\n            \"address\": \"cHVuZSA2NzQzNjcu\",\n            \"contactNumber\": \"8889995566\",\n            \"emailId\": \"punawalahospital@gmail.com\",\n            \"openingTime\": \"09:30:00\",\n            \"closingTime\": \"09:00:00\",\n            \"branch\": \"TXVtYmFpLCBQdW5l\",\n            \"workingDays\": \"Monday - Saturday\",\n            \"offDays\": \"Sunday\",\n            \"numberOfUsers\": \"32\",\n            \"departments\": \"U3VyZ2ljYWwsIERlcm1hdG9sb2d5\",\n            \"createdUser\": {\n                \"id\": 1,\n                \"username\": \"swapnilsudrik.s@gmail.com\",\n                \"name\": \"swapnil\",\n                \"password\": \"$2a$10$qPDBWY/pHgDY7brEZtMpzOEvZHvjUQk8mnFJZMgNbgtfInsWPnF6y\",\n                \"branch\": null,\n                \"roles\": \"SUPER_ADMIN\",\n                \"hospital\": null,\n                \"createdUser\": 1,\n                \"modifiedUser\": 1,\n                \"createdDate\": \"2025-03-03\",\n                \"modifiedDate\": \"2025-03-03\",\n                \"status\": 1\n            },\n            \"modifiedUser\": 1,\n            \"createdDate\": \"2025-03-03\",\n            \"modifiedDate\": \"2025-03-03\",\n            \"status\": 1\n        },\n        \"noOfAmbulances\": 0,\n        \"ambulanceContactNumber\": \"1234567800\",\n        \"ambulanceBookingTime\": \"24 Hours\",\n        \"ambulanceCharges\": 1200,\n        \"createdUser\": 1,\n        \"modifiedUser\": 1,\n        \"createdDate\": \"2025-03-03T10:22:28.291+00:00\",\n        \"modifiedDate\": \"2025-03-04T10:49:11.061+00:00\",\n        \"status\": 1\n    },\n    {\n        \"id\": 2,\n        \"hospitalOpeningTime\": \"10:00\",\n        \"hospitalClosingTime\": \"23:59\",\n        \"hospitalWorkingDays\": \"Monday,Tuesday,wednesday,thursday,friday\",\n        \"hospitalOffDays\": \"Saturday,Sunday\",\n        \"hospital\": {\n            \"id\": 3,\n            \"name\": \"CitHospital\",\n            \"address\": \"cHVuZSA2NzQzNjcu\",\n            \"contactNumber\": \"8889995566\",\n            \"emailId\": \"cithospital@gmail.com\",\n            \"openingTime\": \"09:30:00\",\n            \"closingTime\": \"09:00:00\",\n            \"branch\": \"TXVtYmFpLCBQdW5l\",\n            \"workingDays\": \"Monday - Saturday\",\n            \"offDays\": \"Sunday\",\n            \"numberOfUsers\": \"32\",\n            \"departments\": \"U3VyZ2ljYWwsIERlcm1hdG9sb2d5\",\n            \"createdUser\": 1,\n            \"modifiedUser\": 1,\n            \"createdDate\": \"2025-03-04\",\n            \"modifiedDate\": \"2025-03-04\",\n            \"status\": 1\n        },\n        \"noOfAmbulances\": 7687,\n        \"ambulanceContactNumber\": \"1234567800\",\n        \"ambulanceBookingTime\": \"24 Hours\",\n        \"ambulanceCharges\": 123,\n        \"createdUser\": 1,\n        \"modifiedUser\": 1,\n        \"createdDate\": \"2025-03-04T12:44:50.251+00:00\",\n        \"modifiedDate\": \"2025-03-04T12:57:23.632+00:00\",\n        \"status\": 1\n    },\n    {\n        \"id\": 3,\n        \"hospitalOpeningTime\": \"10:00\",\n        \"hospitalClosingTime\": \"23:59\",\n        \"hospitalWorkingDays\": \"Monday,Tuesday,wednesday,thursday,friday\",\n        \"hospitalOffDays\": \"Saturday,Sunday\",\n        \"hospital\": {\n            \"id\": 5,\n            \"name\": \"CHospital\",\n            \"address\": \"cHVuZSA2NzQzNjcu\",\n            \"contactNumber\": \"8889995566\",\n            \"emailId\": \"chospital@gmail.com\",\n            \"openingTime\": \"09:30:00\",\n            \"closingTime\": \"09:00:00\",\n            \"branch\": \"TXVtYmFpLCBQdW5l\",\n            \"workingDays\": \"Monday - Saturday\",\n            \"offDays\": \"Sunday\",\n            \"numberOfUsers\": \"32\",\n            \"departments\": \"U3VyZ2ljYWwsIERlcm1hdG9sb2d5\",\n            \"createdUser\": 1,\n            \"modifiedUser\": 1,\n            \"createdDate\": \"2025-03-04\",\n            \"modifiedDate\": \"2025-03-04\",\n            \"status\": 1\n        },\n        \"noOfAmbulances\": 12,\n        \"ambulanceContactNumber\": \"1234567800\",\n        \"ambulanceBookingTime\": \"24 Hours\",\n        \"ambulanceCharges\": 123,\n        \"createdUser\": 1,\n        \"modifiedUser\": 1,\n        \"createdDate\": \"2025-03-04T18:11:41.171+00:00\",\n        \"modifiedDate\": null,\n        \"status\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "get setting by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhdmluYXNoQGdtYWlsLmNvbSIsImlhdCI6MTc0Mjg5NzQzOX0.dq_JTD17L-7BVtsWLtJog792YzSChu9ANuAsexmlPcI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/settings/getSettingsByHospitalId/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"settings",
								"getSettingsByHospitalId",
								""
							]
						},
						"description": "**GET** `/settings/{id}`\n\n### **Description:**\n\nRetrieves hospital settings based on the provided settings ID.\n\n### **Authorization:**\n\n**ADMIN** access required."
					},
					"response": [
						{
							"name": "get setting by id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/settings/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"settings",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 04 Mar 2025 18:13:23 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"hospitalOpeningTime\": \"10:00:00.000000\",\n    \"hospitalClosingTime\": \"23:59:00.000000\",\n    \"hospitalWorkingDays\": \"Monday,Tuesday,wednesday,thursday,friday\",\n    \"hospitalOffDays\": \"Saturday,Sunday\",\n    \"hospital\": {\n        \"id\": 1,\n        \"name\": \"Punawala Hospital\",\n        \"address\": \"cHVuZSA2NzQzNjcu\",\n        \"contactNumber\": \"8889995566\",\n        \"emailId\": \"punawalahospital@gmail.com\",\n        \"openingTime\": \"09:30:00\",\n        \"closingTime\": \"09:00:00\",\n        \"branch\": \"TXVtYmFpLCBQdW5l\",\n        \"workingDays\": \"Monday - Saturday\",\n        \"offDays\": \"Sunday\",\n        \"numberOfUsers\": \"32\",\n        \"departments\": \"U3VyZ2ljYWwsIERlcm1hdG9sb2d5\",\n        \"createdUser\": {\n            \"id\": 1,\n            \"username\": \"swapnilsudrik.s@gmail.com\",\n            \"name\": \"swapnil\",\n            \"password\": \"$2a$10$qPDBWY/pHgDY7brEZtMpzOEvZHvjUQk8mnFJZMgNbgtfInsWPnF6y\",\n            \"branch\": null,\n            \"roles\": \"SUPER_ADMIN\",\n            \"hospital\": null,\n            \"createdUser\": 1,\n            \"modifiedUser\": 1,\n            \"createdDate\": \"2025-03-03\",\n            \"modifiedDate\": \"2025-03-03\",\n            \"status\": 1\n        },\n        \"modifiedUser\": 1,\n        \"createdDate\": \"2025-03-03\",\n        \"modifiedDate\": \"2025-03-03\",\n        \"status\": 1\n    },\n    \"noOfAmbulances\": 0,\n    \"ambulanceContactNumber\": \"1234567800\",\n    \"ambulanceBookingTime\": \"24 Hours\",\n    \"ambulanceCharges\": 1200,\n    \"createdUser\": 1,\n    \"modifiedUser\": 1,\n    \"createdDate\": \"2025-03-03T10:22:28.291+00:00\",\n    \"modifiedDate\": \"2025-03-04T10:49:11.061+00:00\",\n    \"status\": 1\n}"
						}
					]
				},
				{
					"name": "get letterHead or logo by setting id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhdmluYXNoQGdtYWlsLmNvbSIsImlhdCI6MTc0Mjg5NzQzOX0.dq_JTD17L-7BVtsWLtJog792YzSChu9ANuAsexmlPcI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/settings/byType/logo/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"settings",
								"byType",
								"logo",
								"3"
							]
						},
						"description": "### **Endpoint:**\n\n**GET** `/settings/byType/{type}/{id}`\n\n### **Description:**\n\nFetches the hospital's logo or letterhead as an image file.\n\n### **Authorization:**\n\n**ADMIN** access required.\n\n### **Path Parameters:**\n\n| Parameter | Type | Required | Description |\n| --- | --- | --- | --- |\n| `type` | `String` | Yes | Either `logo` or `letterhead`. |\n| `id` | `Long` | Yes | The settings ID. |"
					},
					"response": []
				}
			]
		},
		{
			"name": "Patient",
			"item": [
				{
					"name": "Get By Name(Receptionist,Doctor) Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/patients/getPatientsByPatientName/b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"patients",
								"getPatientsByPatientName",
								"b"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Inactive patients Status(Receptionist,Doctor) Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/patients/getInActivePatientsList",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"patients",
								"getInActivePatientsList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active patients Status(Receptionist,Doctor) Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/patients/getActivePatientsList",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"patients",
								"getActivePatientsList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get details by contact(Receptionist,Doctor) Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/patients/getPatientsByContactNumber?contactNumber=966592994",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"patients",
								"getPatientsByContactNumber"
							],
							"query": [
								{
									"key": "contactNumber",
									"value": "966592994"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get patients by id(Receptionist,Doctor) Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/patients/GetPatientByPatientId/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"patients",
								"GetPatientByPatientId",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Current Active patients Status(Receptionist,Doctor) Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/patients/getCurrentActivePatientsList",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"patients",
								"getCurrentActivePatientsList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Current InActive patients Status(Receptionist,Doctor) Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/patients/getCurrentInactivePatientsList",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"patients",
								"getCurrentInactivePatientsList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Patients by hospital id(Receptionist,Doctor) Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/patients/getAllPatientsByHospitalId/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"patients",
								"getAllPatientsByHospitalId",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reports",
			"item": [
				{
					"name": "add report(Receptionist,Doctor) Copy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "medicalReports",
									"type": "file",
									"src": []
								},
								{
									"key": "xyz",
									"value": "blood report",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8080/reports/uploadReport/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reports",
								"uploadReport",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "update-report(Receptionist,Doctor) Copy",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/reports/updateReport",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reports",
								"updateReport"
							]
						}
					},
					"response": []
				},
				{
					"name": "get report(Receptionist,Doctor) Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/reports/getReportListByPatientId/13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reports",
								"getReportListByPatientId",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get report by report id(Receptionist,Doctor) Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Download report(Receptionist,Doctor) Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/reports/downloadReport/16",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"reports",
								"downloadReport",
								"16"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Blood",
			"item": []
		},
		{
			"name": "Ambulance",
			"item": [
				{
					"name": "addAmbulance",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ambulanceNumber\": \"DL12HD4567\",\r\n  \"ambulanceType\": \"VAN\",\r\n  \"hospitalId\": 1,\r\n  \"status\": 1\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/ambulance/addAmbulance",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"ambulance",
								"addAmbulance"
							]
						}
					},
					"response": []
				},
				{
					"name": "bookambulance",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"ankit_updated\",\r\n  \"address\": \"Mumbai, Maharashtra\",\r\n  \"driverName\": \"Suresh Rao\",\r\n  \"outTime\": \"09:00:00\",\r\n  \"inTime\": \"11:00:00\",\r\n  \"kilometer\": 25,\r\n  \"ambulanceId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/ambulance/BookAmbulance",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"ambulance",
								"BookAmbulance"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"ankit_updated\",\r\n  \"address\": \"Mumbai, Maharashtra\",\r\n  \"driverName\": \"Suresh Rao\",\r\n  \"outTime\": \"09:00:00\",\r\n  \"inTime\": \"11:00:00\",\r\n  \"kilometer\": 25,\r\n  \"ambulanceId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/ambulance/update/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"ambulance",
								"update",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getall",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/ambulance/getAll",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"ambulance",
								"getAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "getByid",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/ambulance/getById/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"ambulance",
								"getById",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Prescription",
			"item": [
				{
					"name": "Create Prescription",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": [\"Tablet\",\"Tablet\",\"Tablet\",\"Tablet\",\"Syrup\",\"Insulin\"],\r\n    \"medicine\": [\"Isordill 500mg\", \"Paracetamoll 400mg\", \"Aspirinn 40mg\", \"dolo\",\" Ambrolite D\",\"Lantus \"],\r\n    \"dosage\": [\"1\",\"1\",\"0.5\",\"1\",\"5ml\",\"5ml\"], \r\n    \"schedule\": [\" 1 time\", \"1 time\",\"2 time\",\"2 time\",\"3 times\",\"1 times\"],  \r\n    \"quantity\": [10,10,10,6,9,2],    \r\n    \"numberOfDays\":[10,10,5,3,0,2], \r\n    \"appoinmentId\":14\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/prescriptions/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"prescriptions",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Prescription",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": [\"Tablet\",\"Tablet\",\"Tablet\",\"Tablet\",\"Syrup\",\"Insulin\"],\r\n    \"medicine\": [\"Isordill 500mg\", \"Paracetamoll 400mg\", \"Aspirinn 40mg\", \"dolo\",\" Ambrolite D\",\"Lantus \"],\r\n    \"dosage\": [\"1\",\"1\",\"0.5\",\"1\",\"5ml\",\"5ml\"], \r\n    \"schedule\": [\" 1 time\", \"1 time\",\"2 time\",\"2 time\",\"3 times\",\"1 times\"],  \r\n    \"quantity\": [10,10,10,6,9,2],    \r\n    \"numberOfDays\":[10,10,5,3,0,2], \r\n    \"appoinmentId\":14\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/prescriptions/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"prescriptions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PrescriptionByID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/prescriptions/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"prescriptions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Prescription",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/prescriptions/allprescription",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"prescriptions",
								"allprescription"
							]
						}
					},
					"response": []
				},
				{
					"name": "PrescriptionbyPatientID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/prescriptions/patient/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"prescriptions",
								"patient",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePrescription(status change)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/prescriptions/deleteprescription/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"prescriptions",
								"deleteprescription",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Medicine",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/prescriptions/medicines",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"prescriptions",
								"medicines"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "get Notification",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin@abc.com\",\r\n    \"name\": \"swapnil\",\r\n    \"address\": \"pune\",\r\n    \"roles\": \"admin\",\r\n    \"contactNumber\": \"7057546782\",\r\n    \"dateOfBirth\": \"2000-01-26\",\r\n    \"type\": \"regular\",\r\n    \"specalization\": \"Administration\",\r\n    \"careTaker\": true,\r\n    \"bookingStatus\": 0,\r\n    \"bookingCharge\": 0\r\n}\r\n// SWA7057@2000"
						},
						"url": {
							"raw": "http://localhost:8080/medica/notifications",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"medica",
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove notification by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin@abc.com\",\r\n    \"name\": \"swapnil\",\r\n    \"address\": \"pune\",\r\n    \"roles\": \"admin\",\r\n    \"contactNumber\": \"7057546782\",\r\n    \"dateOfBirth\": \"2000-01-26\",\r\n    \"type\": \"regular\",\r\n    \"specalization\": \"Administration\",\r\n    \"careTaker\": true,\r\n    \"bookingStatus\": 0,\r\n    \"bookingCharge\": 0\r\n}\r\n// SWA7057@2000"
						},
						"url": {
							"raw": "http://localhost:8080/medica/notifications/75c22c71-137d-499f-b10d-170524001da3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"medica",
								"notifications",
								"75c22c71-137d-499f-b10d-170524001da3"
							]
						}
					},
					"response": []
				},
				{
					"name": "clear notification",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin@abc.com\",\r\n    \"name\": \"swapnil\",\r\n    \"address\": \"pune\",\r\n    \"roles\": \"admin\",\r\n    \"contactNumber\": \"7057546782\",\r\n    \"dateOfBirth\": \"2000-01-26\",\r\n    \"type\": \"regular\",\r\n    \"specalization\": \"Administration\",\r\n    \"careTaker\": true,\r\n    \"bookingStatus\": 0,\r\n    \"bookingCharge\": 0\r\n}\r\n// SWA7057@2000"
						},
						"url": {
							"raw": "http://localhost:8080/medica/notifications/clear",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"medica",
								"notifications",
								"clear"
							]
						}
					},
					"response": []
				},
				{
					"name": "send notification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin@abc.com\",\r\n    \"name\": \"swapnil\",\r\n    \"address\": \"pune\",\r\n    \"roles\": \"admin\",\r\n    \"contactNumber\": \"7057546782\",\r\n    \"dateOfBirth\": \"2000-01-26\",\r\n    \"type\": \"regular\",\r\n    \"specalization\": \"Administration\",\r\n    \"careTaker\": true,\r\n    \"bookingStatus\": 0,\r\n    \"bookingCharge\": 0\r\n}\r\n// SWA7057@2000"
						},
						"url": {
							"raw": "http://localhost:8080/medica/notifications/send?username=swapnilsudrik.s@gmail.com&message=hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"medica",
								"notifications",
								"send"
							],
							"query": [
								{
									"key": "username",
									"value": "swapnilsudrik.s@gmail.com"
								},
								{
									"key": "message",
									"value": "hello"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "// {\r\n//     \"username\": \"swapnilsudrik.s@gmail.com\",\r\n//     \"password\": \"superadmin123\"\r\n// }\r\n\r\n{\r\n    \"username\": \"admin@abc.com\",\r\n    \"password\": \"SWA7057@2000\"\r\n}\r\n\r\n// {\r\n//     \"username\": \"public.admin@gmail.com\",\r\n//     \"password\": \"swa7057@2000\"\r\n// }\r\n\r\n// {\r\n//     \"username\": \"public.admin.pune@gmail.com\",\r\n//     \"password\": \"swa7057@2000\"\r\n// }\r\n\r\n{\r\n    \"username\": \"doctor@abc.pune.com\",\r\n    \"password\": \"SWA7057@2000\"\r\n}\r\n\r\n{\r\n    \"username\": \"private.admin@gmail.com\",\r\n    \"password\": \"SWA7057@2000\"\r\n}\r\n\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"auth",
						"login"
					]
				},
				"description": "# Auth Login\n\nThis endpoint allows users to authenticate and obtain a token for accessing protected resources.\n\n## Request\n\n- Method: POST\n    \n- URL: `http://localhost:8080/auth/login`\n    \n- Body:\n    \n    - `username` (text, required): The username of the user.\n        \n    - `password` (text, required): The password of the user.\n        \n\n## Response\n\nThe response is in JSON format with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\"\n    },\n    \"roles\": {\n      \"type\": \"string\"\n    },\n    \"token\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```\n\nThe response contains the following fields:\n\n- `id`: The unique identifier of the user.\n    \n- `roles`: The roles assigned to the user.\n    \n- `token`: The authentication token for accessing protected resources."
			},
			"response": []
		},
		{
			"name": "logout",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://localhost:8080/auth/logout",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"auth",
						"logout"
					]
				},
				"description": "### Auth Logout\n\nThis endpoint is used to log out the user.\n\n#### Request Body\n\n- No request body is required for this endpoint.\n    \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"message\": \"string\"\n}\n\n ```\n\n- `message` (string): A message indicating the result of the logout operation."
			},
			"response": []
		}
	]
}